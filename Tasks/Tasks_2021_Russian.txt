1) Скрипт запускается в текущем каталоге 
и выводит имя и дату файлы с минимальной датой 
последнего изменения.

2) Скрипт обрабатывает все zip файлы в текущем каталоге, 
для каждого zip файла выполняется
проверка, и выдается сообщение, если zip
файл поврежден.

3) Скрипт обрабатывает все zip файлы в текущем каталоге.
Каждый zip файл преобразуется в файл tar.gzip

4) Скрипт запускается с аргументами, которые представляют собой несколько слов, 
например,
1.sh sun mars jupiter
Скрипт выводит на экран все файлы, такие что
имя файла содержит каждое из этих слов
(например, "jupiter and mars rolling around the sun.txt")

5) Скрипт запускается и в цикле каждую секунду выводит 
информацию о свободном месте для текущего диска
(в зависимости от текущей папки).

6) Скрипт запускается с параметром - имя файла.
Далее скрипт начинает выводит файл на экран по строкам, 
каждую секунду скрипт выводит на экран следующие 5 строк файла.

7) Скрипт запускается с параметром - имя файла.
Например, это текстовый файл 1.txt.
Скрипт должен прочитать файл и сохранить в отдельной файле
файл, разбитый на части.
Каждая часть должна иметь размер не более 1 КБ.
Например, 1_1.txt, 1_2.txt и так далее.
Каждая часть должна содержать некоторое число строк исходного файла.

Если длина строки превышает 1 КБ, то ее можно делить на части.
Иначе она должна попасть в какой-то из файлов-фрагментов целиком.

8) Скрипт запускается с параметром - имя папки.
Скрипт обрабатывает все *.txt файлы в папке и ее 
подкаталогах и преобразует кодировку файлов
с utf-8 на cp-1251.

9) Скрипт пробегается по текущей папке, включая подкаталоги
и архивирует все файлы в zip, размер которых превышает
1 Мб (и которые не являются архивами, т. е. файлами 
zip, или gz).

10) Скрипт читает текстовый файл, в котором записаны числа столбиком.
На экран выводится сумма этих чисел.
Скрипт проверяет, что конкретная строка содержит число, если это не так, 
то скрипт выводит сообщение вида
"Строка #12 не является числом: <текст строки>"

11) Скрипт запускается и выводит средний размер
файла, максимальный размер файла, суммарный размер файлов 
для каждого подкаталога текущей папки.

12) Скрипт запускается и архивирует 
каждую подпапку текущего каталога
в zip архив, если суммарный размер файлов
в этой подпапке превышает 1 Мб.

13) Скрипт запускается и выводит структуру подкаталогов текущей папки, 
например, пусть есть папка A, в которой лежат папки A1 и A2,
в папке A1 лежит папка А11.
Скрипт должен выводить структуру в виде:

A
*A1
**A11
*A2

Т. е. для каждого нового уровня добавляется спереди *.

14) Скрипт обрабатывает текущую папку и ее подпапки.
Все файлы которые он находит он копирует в некоторую 
целевую папку (задается параметром скрипта).

Если имена файлов дублируются, то скрипт должен добавлять
к имени файла номер, для исключения дублирования (перед расширением).

Например, пусть есть папка А, в ней лежат две папки B и C.
В папке A лежит 1.txt, в папке B лежит 1.txt и в папке C лежит 1.txt.

В целевой папке должны быть файлы: 1.txt, 1 (1).txt и 1 (2).txt.

15) Скрипт запускается в текущей папке
и выводит полное имя файла, у которого самое длинное полное имя.
Например,
в папке A есть файл 11111111.txt и подпапка B, в которой есть 1.txt
Выводится имя A\11111111.txt, т. к. это длинее, чем
A\B\1.txt.

16) Скрипт запускается в текущей папке и для каждого файла
в этой папке или ее подпапках обратывает zip файлы.
Для каждого zip файла выводится на экран
имя zip и размер его файлов до архивирования
(т. е. какой размер получится при распаковке этого zip файла).

17) Скрипт запускается в текущей папке с неким текстовым параметром (это имя файла).
Далее скрипт ищет в текущей папке, всех ее подкаталогах
и zip архивах, есть ли там файл с таким именем.
Если файл существует, выводится его полный путь.

18) Скрипт запускается с двумя параметрами.
Это пути к двум папкам A и B.
Скрип выводит список файлов, которые есть в A, но которых нет в B.
Скрип выводит список файлов, которые есть в B, но которых нет в A.
Оба списка выводятся с учетом подкаталогов (т. е. 
папки А и B сравниваются с учетом подпапок).

