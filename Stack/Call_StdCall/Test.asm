; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61030.0 

	TITLE	i:\TEMP\Call_StdCall\Test.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?f1@@YGHHH@Z					; f1
PUBLIC	_main
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
; Function compile flags: /Odtp
_TEXT	SEGMENT
_args$ = 8						; size = 4
_main	PROC
; File i:\temp\call_stdcall\test.cpp
; Line 13
	push	ebp
	mov	ebp, esp
; Line 14
	push	1002					; 000003eaH
	push	1001					; 000003e9H
	call	?f1@@YGHHH@Z				; f1
; Line 16
	xor	eax, eax
; Line 17
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_v1$ = -108						; size = 4
_c$ = -104						; size = 100
__$ArrayPad$ = -4					; size = 4
_a1$ = 8						; size = 4
_a2$ = 12						; size = 4
?f1@@YGHHH@Z PROC					; f1
; File i:\temp\call_stdcall\test.cpp
; Line 4
	push	ebp
	mov	ebp, esp
	sub	esp, 108				; 0000006cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 7
	mov	eax, 1
	imul	eax, 12					; 0000000cH
	movsx	ecx, BYTE PTR _c$[ebp+eax]
	mov	DWORD PTR _v1$[ebp], ecx
; Line 8
	mov	edx, DWORD PTR _v1$[ebp]
	add	edx, DWORD PTR _a1$[ebp]
	mov	DWORD PTR _v1$[ebp], edx
; Line 9
	mov	eax, DWORD PTR _v1$[ebp]
; Line 10
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	8
?f1@@YGHHH@Z ENDP					; f1
_TEXT	ENDS
END
