; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.61030.0 

	TITLE	i:\TEMP\Factorial_cdecl\Test.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG3724	DB	'%I64d', 00H
CONST	ENDS
PUBLIC	?f1@@YA_K_K@Z					; f1
PUBLIC	_main
EXTRN	_printf:PROC
; Function compile flags: /Odtp
_TEXT	SEGMENT
_r$ = -8						; size = 8
_args$ = 8						; size = 4
_main	PROC
; File i:\temp\factorial_cdecl\test.cpp
; Line 11
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 20
	push	0
	push	64000					; 0000fa00H
	call	?f1@@YA_K_K@Z				; f1
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
	mov	DWORD PTR _r$[ebp+4], edx
; Line 21
	mov	eax, DWORD PTR _r$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	push	OFFSET $SG3724
	call	_printf
	add	esp, 12					; 0000000cH
; Line 22
	xor	eax, eax
; Line 23
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_n$ = 8							; size = 8
?f1@@YA_K_K@Z PROC					; f1
; File i:\temp\factorial_cdecl\test.cpp
; Line 5
	push	ebp
	mov	ebp, esp
; Line 6
	cmp	DWORD PTR _n$[ebp+4], 0
	ja	SHORT $LN1@f1
	jb	SHORT $LN4@f1
	cmp	DWORD PTR _n$[ebp], 0
	ja	SHORT $LN1@f1
$LN4@f1:
	mov	eax, 1
	xor	edx, edx
	jmp	SHORT $LN2@f1
$LN1@f1:
; Line 7
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _n$[ebp+4]
	sbb	ecx, 0
	push	ecx
	push	eax
	call	?f1@@YA_K_K@Z				; f1
	add	esp, 8
	add	eax, DWORD PTR _n$[ebp]
	adc	edx, DWORD PTR _n$[ebp+4]
$LN2@f1:
; Line 8
	pop	ebp
	ret	0
?f1@@YA_K_K@Z ENDP					; f1
_TEXT	ENDS
END
