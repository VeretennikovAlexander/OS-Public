; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24210.0 

	TITLE	g:\Data\Projects\Commands\OSNew\NotesTex\Examples\Synchronization\ConditionVariable\Test.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?N@@3IA						; N
PUBLIC	?Processed@@3_JA				; Processed
PUBLIC	?MaxItems@@3IA					; MaxItems
_BSS	SEGMENT
?Processed@@3_JA DQ 01H DUP (?)				; Processed
?MaxItems@@3IA DD 01H DUP (?)				; MaxItems
_BSS	ENDS
_DATA	SEGMENT
?N@@3IA	DD	03e8H					; N
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
PUBLIC	_printf
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0CCriticalSection@@QAE@XZ			; CCriticalSection::CCriticalSection
PUBLIC	??1CCriticalSection@@QAE@XZ			; CCriticalSection::~CCriticalSection
PUBLIC	?Enter@CCriticalSection@@QAEXXZ			; CCriticalSection::Enter
PUBLIC	?Leave@CCriticalSection@@QAEXXZ			; CCriticalSection::Leave
PUBLIC	??0CConditionVariable@@QAE@XZ			; CConditionVariable::CConditionVariable
PUBLIC	?Sleep@CConditionVariable@@QAEXAAVCCriticalSection@@@Z ; CConditionVariable::Sleep
PUBLIC	?WakeUp@CConditionVariable@@QAEXXZ		; CConditionVariable::WakeUp
PUBLIC	??1CConditionVariable@@QAE@XZ			; CConditionVariable::~CConditionVariable
PUBLIC	?GetTimeMs@@YA_JXZ				; GetTimeMs
PUBLIC	??0?$allocator@U?$_List_node@HPAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<int,void *> >::allocator<std::_List_node<int,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ; std::allocator<std::_List_node<int,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ; std::allocator<std::_List_node<int,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_List_node@HPAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<int,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@HPAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::max_size
PUBLIC	?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
PUBLIC	?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
PUBLIC	?_Myval@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myval
PUBLIC	??0?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_List_alloc<std::_List_base_types<int,std::allocator<int> > >
PUBLIC	??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::~_List_alloc<std::_List_base_types<int,std::allocator<int> > >
PUBLIC	?_Buyheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Freeheadnode
PUBLIC	?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
PUBLIC	?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
PUBLIC	?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
PUBLIC	?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABIXZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
PUBLIC	??0?$_List_val@U?$_List_simple_types@H@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<int> >::_List_val<std::_List_simple_types<int> >
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<int> >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<int> >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ; std::_List_val<std::_List_simple_types<int> >::_Myval
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second
PUBLIC	??0?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_List_buy<int,std::allocator<int> >::_List_buy<int,std::allocator<int> >
PUBLIC	?_Freenode@?$_List_buy@HV?$allocator@H@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ; std::_List_buy<int,std::allocator<int> >::_Freenode
PUBLIC	??1?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_List_buy<int,std::allocator<int> >::~_List_buy<int,std::allocator<int> >
PUBLIC	??0?$list@HV?$allocator@H@std@@@std@@QAE@XZ	; std::list<int,std::allocator<int> >::list<int,std::allocator<int> >
PUBLIC	?push_back@?$list@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::list<int,std::allocator<int> >::push_back
PUBLIC	??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ	; std::list<int,std::allocator<int> >::~list<int,std::allocator<int> >
PUBLIC	?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ ; std::list<int,std::allocator<int> >::end
PUBLIC	?_Unchecked_end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ ; std::list<int,std::allocator<int> >::_Unchecked_end
PUBLIC	?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ; std::list<int,std::allocator<int> >::_Make_iter
PUBLIC	?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ	; std::list<int,std::allocator<int> >::size
PUBLIC	?max_size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ; std::list<int,std::allocator<int> >::max_size
PUBLIC	?pop_back@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ; std::list<int,std::allocator<int> >::pop_back
PUBLIC	?_Unlinknode@?$list@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ; std::list<int,std::allocator<int> >::_Unlinknode
PUBLIC	?erase@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ; std::list<int,std::allocator<int> >::erase
PUBLIC	?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ	; std::list<int,std::allocator<int> >::clear
PUBLIC	?_Tidy@?$list@HV?$allocator@H@std@@@std@@QAEXXZ	; std::list<int,std::allocator<int> >::_Tidy
PUBLIC	?_Incsize@?$list@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::list<int,std::allocator<int> >::_Incsize
PUBLIC	?Produce@CProducerThread@@AAEHXZ		; CProducerThread::Produce
PUBLIC	?ExecuteOne@CProducerThread@@AAEXXZ		; CProducerThread::ExecuteOne
PUBLIC	?Execute@CProducerThread@@AAEXXZ		; CProducerThread::Execute
PUBLIC	?ThreadProc@CProducerThread@@CGKPAX@Z		; CProducerThread::ThreadProc
PUBLIC	??0CProducerThread@@QAE@XZ			; CProducerThread::CProducerThread
PUBLIC	?Wait@CProducerThread@@QAEXXZ			; CProducerThread::Wait
PUBLIC	??0?$CLock@VCCriticalSection@@@@QAE@AAVCCriticalSection@@@Z ; CLock<CCriticalSection>::CLock<CCriticalSection>
PUBLIC	??1?$CLock@VCCriticalSection@@@@QAE@XZ		; CLock<CCriticalSection>::~CLock<CCriticalSection>
PUBLIC	?CheckProcessed@CConsumerThread@@AAEXXZ		; CConsumerThread::CheckProcessed
PUBLIC	?ExecuteOne@CConsumerThread@@AAEXXZ		; CConsumerThread::ExecuteOne
PUBLIC	?Execute@CConsumerThread@@AAEXXZ		; CConsumerThread::Execute
PUBLIC	?ThreadProc@CConsumerThread@@CGKPAX@Z		; CConsumerThread::ThreadProc
PUBLIC	??0CConsumerThread@@QAE@XZ			; CConsumerThread::CConsumerThread
PUBLIC	?Wait@CConsumerThread@@QAEXXZ			; CConsumerThread::Wait
PUBLIC	_main
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@HPAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++
PUBLIC	??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_iterator<std::_List_val<std::_List_simple_types<int> > >
PUBLIC	??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
PUBLIC	??$_Insert@H@?$list@HV?$allocator@H@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@$$QAH@Z ; std::list<int,std::allocator<int> >::_Insert<int>
PUBLIC	??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<int,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1><>
PUBLIC	??$addressof@H@std@@YAPAHAAH@Z			; std::addressof<int>
PUBLIC	??$destroy@H@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<int>
PUBLIC	??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
PUBLIC	??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>
PUBLIC	??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
PUBLIC	??$destroy@H@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<int>
PUBLIC	??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::forward<std::_List_node<int,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
PUBLIC	??$construct@HH@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH$$QAH@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<int,int>
PUBLIC	??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::allocator<std::_List_node<int,void *> >::destroy<std::_List_node<int,void *> *>
PUBLIC	??$destroy@H@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH@Z ; std::allocator<std::_List_node<int,void *> >::destroy<int>
PUBLIC	??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<int,void *> >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
PUBLIC	??$construct@HH@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH$$QAH@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<int,int>
PUBLIC	??$construct@HH@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH$$QAH@Z ; std::allocator<std::_List_node<int,void *> >::construct<int,int>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?CriticalSection@@3VCCriticalSection@@A		; CriticalSection
PUBLIC	?BufferNotFull@@3VCConditionVariable@@A		; BufferNotFull
PUBLIC	?BufferNotEmpty@@3VCConditionVariable@@A	; BufferNotEmpty
PUBLIC	?Start@@3_JA					; Start
PUBLIC	?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A	; Queue
PUBLIC	??_C@_0DL@HDGCFIPI@Processed?5?$CFd?0?5max?5?$CFd?0?5current?5?$CFd@ ; `string'
PUBLIC	??_C@_04FNFMGDJP@OK?$AN?6?$AA@			; `string'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__InitializeConditionVariable@4:PROC
EXTRN	__imp__WakeConditionVariable@4:PROC
EXTRN	__imp__SleepConditionVariableCS@12:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	__imp__GetSystemTime@4:PROC
EXTRN	__imp__SystemTimeToFileTime@8:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?CriticalSection@@3VCCriticalSection@@A DB 018H DUP (?)	; CriticalSection
?BufferNotFull@@3VCConditionVariable@@A DD 01H DUP (?)	; BufferNotFull
?BufferNotEmpty@@3VCConditionVariable@@A DD 01H DUP (?)	; BufferNotEmpty
	ALIGN	8

?Start@@3_JA DQ	01H DUP (?)				; Start
?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A DQ 01H DUP (?) ; Queue
_BSS	ENDS
CRT$XCU	SEGMENT
?CriticalSection$initializer$@@3P6AXXZA DD FLAT:??__ECriticalSection@@YAXXZ ; CriticalSection$initializer$
CRT$XCU	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FNFMGDJP@OK?$AN?6?$AA@
CONST	SEGMENT
??_C@_04FNFMGDJP@OK?$AN?6?$AA@ DB 'OK', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@HDGCFIPI@Processed?5?$CFd?0?5max?5?$CFd?0?5current?5?$CFd@
CONST	SEGMENT
??_C@_0DL@HDGCFIPI@Processed?5?$CFd?0?5max?5?$CFd?0?5current?5?$CFd@ DB 'P'
	DB	'rocessed %d, max %d, current %d, time %d, per second %d', 0dH
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Execute@CProducerThread@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Execute@CProducerThread@@AAEXXZ$0
__ehfuncinfo$?Execute@CProducerThread@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?Execute@CProducerThread@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ExecuteOne@CProducerThread@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteOne@CProducerThread@@AAEXXZ$0
__ehfuncinfo$?ExecuteOne@CProducerThread@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ExecuteOne@CProducerThread@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
CRT$XCU	SEGMENT
?BufferNotFull$initializer$@@3P6AXXZA DD FLAT:??__EBufferNotFull@@YAXXZ ; BufferNotFull$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?BufferNotEmpty$initializer$@@3P6AXXZA DD FLAT:??__EBufferNotEmpty@@YAXXZ ; BufferNotEmpty$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?Start$initializer$@@3P6AXXZA DD FLAT:??__EStart@@YAXXZ	; Start$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?Queue$initializer$@@3P6AXXZA DD FLAT:??__EQueue@@YAXXZ	; Queue$initializer$
CRT$XCU	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$construct@HH@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH$$QAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@HH@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH$$QAH@Z PROC ; std::allocator<std::_List_node<int,void *> >::construct<int,int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 737
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:
; Line 738
	ret	8
??$construct@HH@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH$$QAH@Z ENDP ; std::allocator<std::_List_node<int,void *> >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$construct@HH@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH$$QAH@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@HH@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH$$QAH@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<int,int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 857
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:
; Line 858
	ret	0
??$construct@HH@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH$$QAH@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<int,void *> >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 737
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	test	ecx, ecx
	je	SHORT $LN3@construct
	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN3@construct:
; Line 738
	ret	8
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<int,void *> >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$destroy@H@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@H@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH@Z PROC ; std::allocator<std::_List_node<int,void *> >::destroy<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 745
	ret	4
??$destroy@H@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH@Z ENDP ; std::allocator<std::_List_node<int,void *> >::destroy<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z PROC ; std::allocator<std::_List_node<int,void *> >::destroy<std::_List_node<int,void *> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 745
	ret	4
??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ENDP ; std::allocator<std::_List_node<int,void *> >::destroy<std::_List_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$construct@HH@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH$$QAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@HH@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH$$QAH@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<int,int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 995
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:
; Line 997
	ret	8
??$construct@HH@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH$$QAH@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 857
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	test	ecx, ecx
	je	SHORT $LN8@construct
	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN8@construct:
; Line 858
	ret	0
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<int,void *> * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1276
	mov	eax, DWORD PTR __Arg$[esp-4]
; Line 1277
	ret	0
??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$destroy@H@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@H@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 865
	ret	0
??$destroy@H@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 865
	ret	0
??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z
_TEXT	SEGMENT
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
_<_Val_0>$ = 16						; size = 4
??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z PROC ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 832
	push	DWORD PTR __Prev$[esp-4]
	push	DWORD PTR __Next$[esp]
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
; Line 835
	lea	edx, DWORD PTR [eax+8]
	test	edx, edx
	je	SHORT $LN36@Buynode
	mov	ecx, DWORD PTR _<_Val_0>$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [edx], ecx
$LN36@Buynode:
; Line 844
	ret	12					; 0000000cH
??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z ENDP ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 995
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	test	ecx, ecx
	je	SHORT $LN13@construct
	mov	eax, DWORD PTR _<_Args_0>$[esp-4]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
$LN13@construct:
; Line 997
	ret	8
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$destroy@H@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@H@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 1004
	ret	4
??$destroy@H@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$addressof@H@std@@YAPAHAAH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@H@std@@YAPAHAAH@Z PROC			; std::addressof<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; Line 725
	mov	eax, DWORD PTR __Val$[esp-4]
; Line 726
	ret	0
??$addressof@H@std@@YAPAHAAH@Z ENDP			; std::addressof<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 279
	mov	DWORD PTR [ecx], 0
; Line 281
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1><>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 1004
	ret	4
??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<int,void *> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; Line 725
	mov	eax, DWORD PTR __Val$[esp-4]
; Line 726
	ret	0
??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$_Insert@H@?$list@HV?$allocator@H@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@$$QAH@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Insert@H@?$list@HV?$allocator@H@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@$$QAH@Z PROC ; std::list<int,std::allocator<int> >::_Insert<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1061
	push	esi
; Line 1064
	mov	esi, DWORD PTR __Where$[esp]
	push	edi
	push	DWORD PTR _<_Val_0>$[esp+4]
	mov	edi, ecx
	push	DWORD PTR [esi+4]
	push	esi
	call	??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>
	mov	edx, eax
; Line 1066
	mov	ecx, 357913940				; 15555554H
	mov	eax, DWORD PTR [edi+4]
	sub	ecx, eax
	cmp	ecx, 1
	jb	SHORT $LN65@Insert
	inc	eax
	mov	DWORD PTR [edi+4], eax
; Line 1067
	mov	DWORD PTR [esi+4], edx
; Line 1068
	mov	eax, DWORD PTR [edx+4]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], edx
; Line 1069
	ret	8
$LN65@Insert:
; Line 1066
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN67@Insert:
$LN64@Insert:
	int	3
??$_Insert@H@?$list@HV?$allocator@H@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@$$QAH@Z ENDP ; std::list<int,std::allocator<int> >::_Insert<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1276
	mov	eax, DWORD PTR __Arg$[esp-4]
; Line 1277
	ret	0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 123
	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [ecx], eax
; Line 125
	mov	eax, ecx
	ret	8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 389
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], eax
; Line 390
	mov	eax, ecx
; Line 391
	ret	0
??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_iterator<std::_List_val<std::_List_simple_types<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 347
	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [ecx], eax
; Line 349
	mov	eax, ecx
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_iterator<std::_List_val<std::_List_simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 275
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], eax
; Line 278
	mov	eax, ecx
; Line 279
	ret	0
??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 250
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	DWORD PTR [eax], edx
; Line 251
	mov	edx, DWORD PTR [edx]
	mov	DWORD PTR [ecx], edx
; Line 253
	ret	8
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 244
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ecx], eax
; Line 245
	mov	eax, ecx
; Line 246
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 186
	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [ecx], eax
; Line 188
	mov	eax, ecx
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@HPAX@2@XZ
_TEXT	SEGMENT
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@HPAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 96
	mov	eax, DWORD PTR [ecx]
; Line 97
	ret	0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@HPAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 43
	mov	eax, DWORD PTR __Pnode$[esp-4]
	mov	DWORD PTR [ecx], eax
; Line 46
	mov	eax, ecx
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _main
_TEXT	SEGMENT
_P$ = -12						; size = 4
_C$ = -8						; size = 4
_ThreadId$1 = -4					; size = 4
_ThreadId$2 = -4					; size = 4
_args$ = 8						; size = 4
_main	PROC						; COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 276
	sub	esp, 12					; 0000000cH
	push	esi
; Line 277
	mov	esi, DWORD PTR __imp__CreateThread@24
	lea	eax, DWORD PTR _ThreadId$2[esp+16]
	push	eax
	push	0
	lea	eax, DWORD PTR _P$[esp+24]
	push	eax
	push	OFFSET ?ThreadProc@CProducerThread@@CGKPAX@Z ; CProducerThread::ThreadProc
	push	0
	push	0
	call	esi
	mov	DWORD PTR _P$[esp+16], eax
; Line 280
	lea	eax, DWORD PTR _ThreadId$1[esp+16]
	push	eax
	push	0
	lea	eax, DWORD PTR _C$[esp+24]
	push	eax
	push	OFFSET ?ThreadProc@CConsumerThread@@CGKPAX@Z ; CConsumerThread::ThreadProc
	push	0
	push	0
	call	esi
; Line 285
	mov	ecx, DWORD PTR _P$[esp+16]
	mov	esi, DWORD PTR __imp__WaitForSingleObject@8
	mov	DWORD PTR _C$[esp+16], eax
	cmp	ecx, -1
	je	SHORT $LN8@main
	push	-1
	push	ecx
	call	esi
	mov	eax, DWORD PTR _C$[esp+16]
$LN8@main:
; Line 286
	cmp	eax, -1
	je	SHORT $LN11@main
	push	-1
	push	eax
	call	esi
$LN11@main:
; Line 288
	push	OFFSET ??_C@_04FNFMGDJP@OK?$AN?6?$AA@
	call	_printf
	add	esp, 4
; Line 289
	xor	eax, eax
	pop	esi
; Line 290
	add	esp, 12					; 0000000cH
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Wait@CConsumerThread@@QAEXXZ
_TEXT	SEGMENT
?Wait@CConsumerThread@@QAEXXZ PROC			; CConsumerThread::Wait, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 267
	mov	eax, DWORD PTR [ecx]
	cmp	eax, -1
	je	SHORT $LN2@Wait
; Line 269
	push	-1
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
$LN2@Wait:
; Line 271
	ret	0
?Wait@CConsumerThread@@QAEXXZ ENDP			; CConsumerThread::Wait
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0CConsumerThread@@QAE@XZ
_TEXT	SEGMENT
_ThreadId$ = -4						; size = 4
??0CConsumerThread@@QAE@XZ PROC				; CConsumerThread::CConsumerThread, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 259
	push	ecx
	push	esi
; Line 262
	lea	eax, DWORD PTR _ThreadId$[esp+8]
	mov	esi, ecx
	push	eax
	push	0
	push	esi
	push	OFFSET ?ThreadProc@CConsumerThread@@CGKPAX@Z ; CConsumerThread::ThreadProc
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
	mov	DWORD PTR [esi], eax
; Line 263
	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
??0CConsumerThread@@QAE@XZ ENDP				; CConsumerThread::CConsumerThread
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ThreadProc@CConsumerThread@@CGKPAX@Z
_TEXT	SEGMENT
_lpParameter$ = 8					; size = 4
?ThreadProc@CConsumerThread@@CGKPAX@Z PROC		; CConsumerThread::ThreadProc, COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 250
	mov	ecx, DWORD PTR _lpParameter$[esp-4]
	call	?Execute@CConsumerThread@@AAEXXZ	; CConsumerThread::Execute
$LN4@ThreadProc:
$LN3@ThreadProc:
	int	3
?ThreadProc@CConsumerThread@@CGKPAX@Z ENDP		; CConsumerThread::ThreadProc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Execute@CConsumerThread@@AAEXXZ
_TEXT	SEGMENT
?Execute@CConsumerThread@@AAEXXZ PROC			; CConsumerThread::Execute, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 237
	push	ebx
	push	ebp
	mov	ebp, DWORD PTR __imp__WakeConditionVariable@4
	mov	ebx, ecx
	push	esi
	mov	esi, DWORD PTR __imp__SleepConditionVariableCS@12
	push	edi
	mov	edi, DWORD PTR __imp__EnterCriticalSection@4
$LL2@Execute:
; Line 240
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	call	edi
	mov	ecx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	test	ecx, ecx
	jne	SHORT $LN7@Execute
	npad	7
$LL6@Execute:
	push	-1
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	push	OFFSET ?BufferNotEmpty@@3VCConditionVariable@@A ; BufferNotEmpty
	call	esi
	mov	ecx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	test	ecx, ecx
	je	SHORT $LL6@Execute
$LN7@Execute:
	cmp	DWORD PTR ?MaxItems@@3IA, ecx		; MaxItems
	mov	eax, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A
	cmova	ecx, DWORD PTR ?MaxItems@@3IA		; MaxItems
	mov	DWORD PTR ?MaxItems@@3IA, ecx		; MaxItems
	mov	eax, DWORD PTR [eax+4]
	push	eax
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	dec	DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, ebx
	call	?CheckProcessed@CConsumerThread@@AAEXXZ	; CConsumerThread::CheckProcessed
	push	OFFSET ?BufferNotFull@@3VCConditionVariable@@A ; BufferNotFull
	call	ebp
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	call	DWORD PTR __imp__LeaveCriticalSection@4
; Line 241
	jmp	$LL2@Execute
?Execute@CConsumerThread@@AAEXXZ ENDP			; CConsumerThread::Execute
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ExecuteOne@CConsumerThread@@AAEXXZ
_TEXT	SEGMENT
?ExecuteOne@CConsumerThread@@AAEXXZ PROC		; CConsumerThread::ExecuteOne, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 218
	push	edi
; Line 219
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	mov	edi, ecx
	call	DWORD PTR __imp__EnterCriticalSection@4
; Line 221
	mov	edx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	test	edx, edx
	jne	SHORT $LN3@ExecuteOne
	push	esi
	mov	esi, DWORD PTR __imp__SleepConditionVariableCS@12
	npad	1
$LL2@ExecuteOne:
; Line 223
	push	-1
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	push	OFFSET ?BufferNotEmpty@@3VCConditionVariable@@A ; BufferNotEmpty
	call	esi
	mov	edx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	test	edx, edx
	je	SHORT $LL2@ExecuteOne
	pop	esi
$LN3@ExecuteOne:
; Line 226
	cmp	DWORD PTR ?MaxItems@@3IA, edx		; MaxItems
; Line 228
	mov	eax, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A
	cmova	edx, DWORD PTR ?MaxItems@@3IA		; MaxItems
	mov	DWORD PTR ?MaxItems@@3IA, edx		; MaxItems
	mov	eax, DWORD PTR [eax+4]
	push	eax
	mov	edx, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	dec	DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 230
	mov	ecx, edi
	call	?CheckProcessed@CConsumerThread@@AAEXXZ	; CConsumerThread::CheckProcessed
; Line 233
	push	OFFSET ?BufferNotFull@@3VCConditionVariable@@A ; BufferNotFull
	call	DWORD PTR __imp__WakeConditionVariable@4
; Line 234
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	call	DWORD PTR __imp__LeaveCriticalSection@4
	pop	edi
	ret	0
?ExecuteOne@CConsumerThread@@AAEXXZ ENDP		; CConsumerThread::ExecuteOne
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?CheckProcessed@CConsumerThread@@AAEXXZ
_TEXT	SEGMENT
?CheckProcessed@CConsumerThread@@AAEXXZ PROC		; CConsumerThread::CheckProcessed, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 204
	push	esi
; Line 205
	mov	esi, DWORD PTR ?Processed@@3_JA+4
	push	edi
	mov	edi, DWORD PTR ?Processed@@3_JA
	add	edi, 1
; Line 207
	push	0
	adc	esi, 0
	mov	DWORD PTR ?Processed@@3_JA, edi
	push	100000					; 000186a0H
	push	esi
	push	edi
	mov	DWORD PTR ?Processed@@3_JA+4, esi
	call	__alldiv
	push	0
	push	100000					; 000186a0H
	push	edx
	push	eax
	call	__allmul
	sub	edi, eax
	sbb	esi, edx
	or	edi, esi
	jne	SHORT $LN2@CheckProce
; Line 209
	push	ebx
	call	?GetTimeMs@@YA_JXZ			; GetTimeMs
; Line 210
	push	edi
	mov	edi, DWORD PTR ?Processed@@3_JA
	mov	ebx, eax
	sub	ebx, DWORD PTR ?Start@@3_JA
	mov	esi, edx
	push	1000					; 000003e8H
	push	DWORD PTR ?Processed@@3_JA+4
	sbb	esi, DWORD PTR ?Start@@3_JA+4
	push	edi
	call	__allmul
	push	esi
	push	ebx
	push	edx
	push	eax
	call	__alldiv
; Line 212
	push	eax
	push	ebx
	push	DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	push	DWORD PTR ?MaxItems@@3IA		; MaxItems
	push	edi
	push	OFFSET ??_C@_0DL@HDGCFIPI@Processed?5?$CFd?0?5max?5?$CFd?0?5current?5?$CFd@
	call	_printf
	add	esp, 24					; 00000018H
	pop	ebx
$LN2@CheckProce:
; Line 215
	pop	edi
	pop	esi
	ret	0
?CheckProcessed@CConsumerThread@@AAEXXZ ENDP		; CConsumerThread::CheckProcessed
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CLock@VCCriticalSection@@@@QAE@XZ
_TEXT	SEGMENT
??1?$CLock@VCCriticalSection@@@@QAE@XZ PROC		; CLock<CCriticalSection>::~CLock<CCriticalSection>, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 106
	push	DWORD PTR [ecx]
	call	DWORD PTR __imp__LeaveCriticalSection@4
; Line 107
	ret	0
??1?$CLock@VCCriticalSection@@@@QAE@XZ ENDP		; CLock<CCriticalSection>::~CLock<CCriticalSection>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$CLock@VCCriticalSection@@@@QAE@AAVCCriticalSection@@@Z
_TEXT	SEGMENT
_ASec$ = 8						; size = 4
??0?$CLock@VCCriticalSection@@@@QAE@AAVCCriticalSection@@@Z PROC ; CLock<CCriticalSection>::CLock<CCriticalSection>, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 99
	mov	eax, DWORD PTR _ASec$[esp-4]
	push	esi
	mov	esi, ecx
; Line 101
	push	eax
	mov	DWORD PTR [esi], eax
	call	DWORD PTR __imp__EnterCriticalSection@4
; Line 102
	mov	eax, esi
	pop	esi
	ret	4
??0?$CLock@VCCriticalSection@@@@QAE@AAVCCriticalSection@@@Z ENDP ; CLock<CCriticalSection>::CLock<CCriticalSection>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Wait@CProducerThread@@QAEXXZ
_TEXT	SEGMENT
?Wait@CProducerThread@@QAEXXZ PROC			; CProducerThread::Wait, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 193
	mov	eax, DWORD PTR [ecx]
	cmp	eax, -1
	je	SHORT $LN2@Wait
; Line 195
	push	-1
	push	eax
	call	DWORD PTR __imp__WaitForSingleObject@8
$LN2@Wait:
; Line 197
	ret	0
?Wait@CProducerThread@@QAEXXZ ENDP			; CProducerThread::Wait
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0CProducerThread@@QAE@XZ
_TEXT	SEGMENT
_ThreadId$ = -4						; size = 4
??0CProducerThread@@QAE@XZ PROC				; CProducerThread::CProducerThread, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 185
	push	ecx
	push	esi
; Line 188
	lea	eax, DWORD PTR _ThreadId$[esp+8]
	mov	esi, ecx
	push	eax
	push	0
	push	esi
	push	OFFSET ?ThreadProc@CProducerThread@@CGKPAX@Z ; CProducerThread::ThreadProc
	push	0
	push	0
	call	DWORD PTR __imp__CreateThread@24
	mov	DWORD PTR [esi], eax
; Line 189
	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
??0CProducerThread@@QAE@XZ ENDP				; CProducerThread::CProducerThread
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ThreadProc@CProducerThread@@CGKPAX@Z
_TEXT	SEGMENT
_lpParameter$ = 8					; size = 4
?ThreadProc@CProducerThread@@CGKPAX@Z PROC		; CProducerThread::ThreadProc, COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 176
	mov	ecx, DWORD PTR _lpParameter$[esp-4]
	call	?Execute@CProducerThread@@AAEXXZ	; CProducerThread::Execute
$LN4@ThreadProc:
$LN3@ThreadProc:
	int	3
?ThreadProc@CProducerThread@@CGKPAX@Z ENDP		; CProducerThread::ThreadProc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Execute@CProducerThread@@AAEXXZ
_TEXT	SEGMENT
_Lock$2 = -20						; size = 4
$T3 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Execute@CProducerThread@@AAEXXZ PROC			; CProducerThread::Execute, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 163
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Execute@CProducerThread@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 166
	mov	esi, DWORD PTR __imp__SleepConditionVariableCS@12
	mov	DWORD PTR _Lock$2[ebp], OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
$LL2@Execute:
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	call	DWORD PTR __imp__EnterCriticalSection@4
	mov	eax, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	eax, DWORD PTR ?N@@3IA			; N
	jb	SHORT $LN7@Execute
$LL6@Execute:
	push	-1
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	push	OFFSET ?BufferNotFull@@3VCConditionVariable@@A ; BufferNotFull
	call	esi
	mov	eax, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	cmp	eax, DWORD PTR ?N@@3IA			; N
	jae	SHORT $LL6@Execute
$LN7@Execute:
	mov	ebx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
	mov	DWORD PTR $T3[ebp], 1
	push	DWORD PTR [ebx+4]
	push	ebx
	call	??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>
	mov	edx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	mov	ecx, 357913940				; 15555554H
	sub	ecx, edx
	mov	edi, eax
	cmp	ecx, 1
	jb	SHORT $LN160@Execute
	inc	edx
	mov	DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4, edx
	mov	DWORD PTR [ebx+4], edi
	mov	eax, DWORD PTR [edi+4]
	push	OFFSET ?BufferNotEmpty@@3VCConditionVariable@@A ; BufferNotEmpty
	mov	DWORD PTR [eax], edi
	mov	ecx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	cmp	DWORD PTR ?MaxItems@@3IA, ecx		; MaxItems
	cmova	ecx, DWORD PTR ?MaxItems@@3IA		; MaxItems
	mov	DWORD PTR ?MaxItems@@3IA, ecx		; MaxItems
	call	DWORD PTR __imp__WakeConditionVariable@4
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	call	DWORD PTR __imp__LeaveCriticalSection@4
; Line 167
	jmp	$LL2@Execute
$LN160@Execute:
; Line 166
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN168@Execute:
$LN167@Execute:
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Execute@CProducerThread@@AAEXXZ$0:
	lea	ecx, DWORD PTR _Lock$2[ebp]
	jmp	??1?$CLock@VCCriticalSection@@@@QAE@XZ	; CLock<CCriticalSection>::~CLock<CCriticalSection>
__ehhandler$?Execute@CProducerThread@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Execute@CProducerThread@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Execute@CProducerThread@@AAEXXZ ENDP			; CProducerThread::Execute
; Function compile flags: /Ogtpy
;	COMDAT ?ExecuteOne@CProducerThread@@AAEXXZ
_TEXT	SEGMENT
_Lock$ = -20						; size = 4
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?ExecuteOne@CProducerThread@@AAEXXZ PROC		; CProducerThread::ExecuteOne, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 143
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ExecuteOne@CProducerThread@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 144
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	mov	DWORD PTR _Lock$[ebp], OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	call	DWORD PTR __imp__EnterCriticalSection@4
; Line 146
	mov	eax, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	eax, DWORD PTR ?N@@3IA			; N
	jb	SHORT $LN3@ExecuteOne
	mov	esi, DWORD PTR __imp__SleepConditionVariableCS@12
$LL2@ExecuteOne:
; Line 148
	push	-1
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	push	OFFSET ?BufferNotFull@@3VCConditionVariable@@A ; BufferNotFull
	call	esi
	mov	eax, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	cmp	eax, DWORD PTR ?N@@3IA			; N
	jae	SHORT $LL2@ExecuteOne
$LN3@ExecuteOne:
; Line 151
	mov	edi, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
	mov	DWORD PTR $T2[ebp], 1
	push	DWORD PTR [edi+4]
	push	edi
	call	??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>
	mov	edx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	mov	ecx, 357913940				; 15555554H
	sub	ecx, edx
	mov	esi, eax
	cmp	ecx, 1
	jae	SHORT $LN68@ExecuteOne
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN158@ExecuteOne:
$LN68@ExecuteOne:
	inc	edx
	mov	DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4, edx
	mov	DWORD PTR [edi+4], esi
	mov	eax, DWORD PTR [esi+4]
; Line 159
	push	OFFSET ?BufferNotEmpty@@3VCConditionVariable@@A ; BufferNotEmpty
	mov	DWORD PTR [eax], esi
	mov	ecx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4
	cmp	DWORD PTR ?MaxItems@@3IA, ecx		; MaxItems
	cmova	ecx, DWORD PTR ?MaxItems@@3IA		; MaxItems
	mov	DWORD PTR ?MaxItems@@3IA, ecx		; MaxItems
	call	DWORD PTR __imp__WakeConditionVariable@4
; Line 160
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	call	DWORD PTR __imp__LeaveCriticalSection@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN157@ExecuteOne:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ExecuteOne@CProducerThread@@AAEXXZ$0:
	lea	ecx, DWORD PTR _Lock$[ebp]
	jmp	??1?$CLock@VCCriticalSection@@@@QAE@XZ	; CLock<CCriticalSection>::~CLock<CCriticalSection>
__ehhandler$?ExecuteOne@CProducerThread@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ExecuteOne@CProducerThread@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ExecuteOne@CProducerThread@@AAEXXZ ENDP		; CProducerThread::ExecuteOne
; Function compile flags: /Ogtpy
;	COMDAT ?Produce@CProducerThread@@AAEHXZ
_TEXT	SEGMENT
?Produce@CProducerThread@@AAEHXZ PROC			; CProducerThread::Produce, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 139
	mov	eax, 1
; Line 140
	ret	0
?Produce@CProducerThread@@AAEHXZ ENDP			; CProducerThread::Produce
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__FQueue@@YAXXZ
text$yd	SEGMENT
??__FQueue@@YAXXZ PROC					; `dynamic atexit destructor for 'Queue'', COMDAT
	mov	eax, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A
	push	ebx
	push	esi
	mov	esi, DWORD PTR [eax]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A
	mov	DWORD PTR [eax+4], eax
	mov	ebx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A
	mov	DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4, 0
	cmp	esi, ebx
	je	SHORT $LN10@dynamic
	push	edi
$LL11@dynamic:
	mov	edi, DWORD PTR [esi]
	mov	ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
	push	esi
	call	??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
	lea	eax, DWORD PTR [esi+4]
	mov	ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
	push	eax
	call	??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
	lea	eax, DWORD PTR [esi+8]
	mov	ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
	push	eax
	call	??$destroy@H@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<int>
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	mov	ebx, DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A
	add	esp, 4
	mov	esi, edi
	cmp	edi, ebx
	jne	SHORT $LL11@dynamic
	pop	edi
$LN10@dynamic:
	push	ebx
	mov	ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
	call	??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
	lea	eax, DWORD PTR [ebx+4]
	mov	ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
	push	eax
	call	??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
	push	ebx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	esi
	pop	ebx
	ret	0
??__FQueue@@YAXXZ ENDP					; `dynamic atexit destructor for 'Queue''
text$yd	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__EQueue@@YAXXZ
text$di	SEGMENT
??__EQueue@@YAXXZ PROC					; `dynamic initializer for 'Queue'', COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 130
	mov	ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
	call	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >
	push	0
	push	0
	mov	ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
	mov	DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A, 0
	mov	DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A+4, 0
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
	push	OFFSET ??__FQueue@@YAXXZ		; `dynamic atexit destructor for 'Queue''
	mov	DWORD PTR ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A, eax
	call	_atexit
	pop	ecx
	ret	0
??__EQueue@@YAXXZ ENDP					; `dynamic initializer for 'Queue''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Incsize@?$list@HV?$allocator@H@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?_Incsize@?$list@HV?$allocator@H@std@@@std@@QAEXI@Z PROC ; std::list<int,std::allocator<int> >::_Incsize, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1907
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, 357913940				; 15555554H
	push	esi
	mov	esi, DWORD PTR __Count$[esp]
	sub	eax, edx
	cmp	eax, esi
	jb	SHORT $LN41@Incsize
; Line 1909
	lea	eax, DWORD PTR [edx+esi]
	mov	DWORD PTR [ecx+4], eax
	pop	esi
; Line 1910
	ret	4
$LN41@Incsize:
; Line 1908
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN43@Incsize:
$LN40@Incsize:
	int	3
?_Incsize@?$list@HV?$allocator@H@std@@@std@@QAEXI@Z ENDP ; std::list<int,std::allocator<int> >::_Incsize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Tidy@?$list@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Tidy@?$list@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::list<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1883
	push	edi
	mov	edi, ecx
; Line 1884
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [edx], edx
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [edx+4], edx
	mov	DWORD PTR [edi+4], 0
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN5@Tidy
	push	esi
	npad	6
$LL6@Tidy:
	mov	esi, DWORD PTR [eax]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL6@Tidy
	pop	esi
$LN5@Tidy:
	pop	edi
; Line 1885
	ret	0
?_Tidy@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::list<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::list<int,std::allocator<int> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1500
	push	edi
	mov	edi, ecx
; Line 1505
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx]
; Line 1506
	mov	DWORD PTR [edx], edx
; Line 1507
	mov	edx, DWORD PTR [edi]
	mov	DWORD PTR [edx+4], edx
; Line 1508
	mov	DWORD PTR [edi+4], 0
; Line 1510
	cmp	eax, DWORD PTR [edi]
	je	SHORT $LN3@clear
	push	esi
	npad	6
$LL4@clear:
; Line 1512
	mov	esi, DWORD PTR [eax]
; Line 1513
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	eax, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL4@clear
	pop	esi
$LN3@clear:
	pop	edi
; Line 1515
	ret	0
?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::list<int,std::allocator<int> >::clear
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?erase@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z PROC ; std::list<int,std::allocator<int> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1467
	mov	eax, DWORD PTR __Where$[esp-4]
	push	esi
	push	edi
	mov	edi, ecx
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Where$[esp+4], edx
	mov	esi, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
; Line 1468
	push	eax
	mov	DWORD PTR [esi], edx
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	dec	DWORD PTR [edi+4]
	call	??3@YAXPAX@Z				; operator delete
; Line 1469
	mov	eax, DWORD PTR ___$ReturnUdt$[esp+8]
	add	esp, 4
	mov	ecx, DWORD PTR __Where$[esp+4]
	pop	edi
	mov	DWORD PTR [eax], ecx
	pop	esi
; Line 1470
	ret	8
?erase@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ENDP ; std::list<int,std::allocator<int> >::erase
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Unlinknode@?$list@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z
_TEXT	SEGMENT
__Where$ = 8						; size = 4
?_Unlinknode@?$list@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z PROC ; std::list<int,std::allocator<int> >::_Unlinknode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1453
	mov	eax, DWORD PTR __Where$[esp-4]
	push	esi
; Line 1456
	mov	esi, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi], edx
; Line 1458
	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], edx
; Line 1461
	dec	DWORD PTR [ecx+4]
	pop	esi
; Line 1463
	ret	4
?_Unlinknode@?$list@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ENDP ; std::list<int,std::allocator<int> >::_Unlinknode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?pop_back@?$list@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$list@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::list<int,std::allocator<int> >::pop_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1298
	mov	eax, DWORD PTR [ecx]
	push	esi
	mov	eax, DWORD PTR [eax+4]
	push	eax
	mov	esi, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [esi], edx
	mov	esi, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [esi+4], edx
	dec	DWORD PTR [ecx+4]
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	esi
; Line 1299
	ret	0
?pop_back@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::list<int,std::allocator<int> >::pop_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::list<int,std::allocator<int> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1247
	mov	eax, 357913941				; 15555555H
; Line 1248
	ret	0
?max_size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::list<int,std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::list<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1242
	mov	eax, DWORD PTR [ecx+4]
; Line 1243
	ret	0
?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::list<int,std::allocator<int> >::size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z PROC ; std::list<int,std::allocator<int> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1164
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR __Where$[esp-4]
	mov	DWORD PTR [eax], ecx
; Line 1165
	ret	8
?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ENDP ; std::list<int,std::allocator<int> >::_Make_iter
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Unchecked_end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ PROC ; std::list<int,std::allocator<int> >::_Unchecked_end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1153
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx
; Line 1154
	ret	4
?_Unchecked_end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ ENDP ; std::list<int,std::allocator<int> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ PROC ; std::list<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1131
	mov	eax, DWORD PTR ___$ReturnUdt$[esp-4]
	mov	ecx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], ecx
; Line 1132
	ret	4
?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ ENDP ; std::list<int,std::allocator<int> >::end
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::list<int,std::allocator<int> >::~list<int,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1097
	push	edi
	mov	edi, ecx
; Line 1098
	mov	eax, DWORD PTR [edi]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [eax], eax
	mov	eax, DWORD PTR [edi]
	mov	DWORD PTR [eax+4], eax
	mov	DWORD PTR [edi+4], 0
	cmp	edx, DWORD PTR [edi]
	je	SHORT $LN7@list
	push	esi
	npad	6
$LL8@list:
	mov	esi, DWORD PTR [edx]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	edx, esi
	cmp	esi, DWORD PTR [edi]
	jne	SHORT $LL8@list
	pop	esi
$LN7@list:
; Line 1099
	push	DWORD PTR [edi]
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
	ret	0
??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::list<int,std::allocator<int> >::~list<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?push_back@?$list@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?push_back@?$list@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z PROC ; std::list<int,std::allocator<int> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1025
	push	esi
	mov	esi, ecx
	push	edi
; Line 1026
	push	DWORD PTR __Val$[esp+4]
	mov	edi, DWORD PTR [esi]
	push	DWORD PTR [edi+4]
	push	edi
	call	??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>
	mov	edx, eax
	mov	ecx, 357913940				; 15555554H
	mov	eax, DWORD PTR [esi+4]
	sub	ecx, eax
	cmp	ecx, 1
	jb	SHORT $LN94@push_back
	inc	eax
	mov	DWORD PTR [esi+4], eax
	mov	DWORD PTR [edi+4], edx
	mov	eax, DWORD PTR [edx+4]
	pop	edi
	pop	esi
	mov	DWORD PTR [eax], edx
; Line 1027
	ret	4
$LN94@push_back:
; Line 1026
	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN96@push_back:
$LN93@push_back:
	int	3
?push_back@?$list@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ENDP ; std::list<int,std::allocator<int> >::push_back
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$list@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$list@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::list<int,std::allocator<int> >::list<int,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 893
	push	ecx
	push	esi
	mov	esi, ecx
	push	0
	push	0
	mov	DWORD PTR _this$[esp+16], esi
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
	mov	DWORD PTR [esi], eax
; Line 894
	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
??0?$list@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::list<int,std::allocator<int> >::list<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_List_buy<int,std::allocator<int> >::~_List_buy<int,std::allocator<int> >, COMDAT
; _this$ = ecx
	push	DWORD PTR [ecx]
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
??1?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_List_buy<int,std::allocator<int> >::~_List_buy<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Freenode@?$_List_buy@HV?$allocator@H@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@HV?$allocator@H@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z PROC ; std::_List_buy<int,std::allocator<int> >::_Freenode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 855
	push	DWORD PTR __Pnode$[esp-4]
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
; Line 856
	ret	4
?_Freenode@?$_List_buy@HV?$allocator@H@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ENDP ; std::_List_buy<int,std::allocator<int> >::_Freenode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_List_buy<int,std::allocator<int> >::_List_buy<int,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 818
	push	ecx
	push	esi
	mov	esi, ecx
	push	0
	push	0
	mov	DWORD PTR _this$[esp+16], esi
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
	mov	DWORD PTR [esi], eax
; Line 819
	mov	eax, esi
	pop	esi
	pop	ecx
	ret	0
??0?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_List_buy<int,std::allocator<int> >::_List_buy<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 320
	mov	eax, ecx
; Line 321
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 315
	mov	eax, ecx
; Line 316
	ret	0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 300
	mov	eax, ecx
; Line 301
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 295
	mov	eax, ecx
; Line 296
	ret	0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<int> >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 546
	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 8
; Line 547
	ret	0
?_Myval@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<int> >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<int> >::_Prevnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 541
	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 4
; Line 542
	ret	0
?_Prevnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<int> >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<int> >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 536
	mov	eax, DWORD PTR __Pnode$[esp-4]
; Line 537
	ret	0
?_Nextnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<int> >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_val@U?$_List_simple_types@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_List_val@U?$_List_simple_types@H@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<int> >::_List_val<std::_List_simple_types<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 529
	mov	DWORD PTR [ecx], 0
; Line 532
	mov	eax, ecx
	mov	DWORD PTR [ecx+4], 0
	ret	0
??0?$_List_val@U?$_List_simple_types@H@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<int> >::_List_val<std::_List_simple_types<int> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABIXZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 797
	lea	eax, DWORD PTR [ecx+4]
; Line 798
	ret	0
?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABIXZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 792
	lea	eax, DWORD PTR [ecx+4]
; Line 793
	ret	0
?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ
_TEXT	SEGMENT
?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 782
	mov	eax, ecx
; Line 783
	ret	0
?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 777
	mov	eax, ecx
; Line 778
	ret	0
?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 772
	mov	eax, ecx
; Line 773
	ret	0
?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 767
	mov	eax, ecx
; Line 768
	ret	0
?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 762
	mov	eax, ecx
; Line 763
	ret	0
?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z
_TEXT	SEGMENT
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 730
	push	12					; 0000000cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	je	SHORT $LN117@Buynode0
; Line 732
	mov	ecx, DWORD PTR __Next$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN115@Buynode0
; Line 734
	mov	ecx, eax
; Line 735
	mov	edx, eax
	jmp	SHORT $LN2@Buynode0
$LN115@Buynode0:
	mov	edx, DWORD PTR __Prev$[esp-4]
$LN2@Buynode0:
; Line 738
	mov	DWORD PTR [eax], ecx
; Line 740
	lea	ecx, DWORD PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN4@Buynode0
	mov	DWORD PTR [ecx], edx
$LN4@Buynode0:
; Line 748
	ret	8
$LN117@Buynode0:
; Line 730
	call	__invalid_parameter_noinfo_noreturn
$LN119@Buynode0:
$LN116@Buynode0:
	int	3
?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Freeheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Freeheadnode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 724
	push	DWORD PTR __Pnode$[esp-4]
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
; Line 725
	ret	4
?_Freeheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Buyheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@XZ
_TEXT	SEGMENT
?_Buyheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buyheadnode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 715
	push	0
	push	0
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
; Line 716
	ret	0
?_Buyheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::~_List_alloc<std::_List_base_types<int,std::allocator<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 617
	push	DWORD PTR [ecx]
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
; Line 618
	ret	0
??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::~_List_alloc<std::_List_base_types<int,std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_List_alloc<std::_List_base_types<int,std::allocator<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 602
	push	esi
	mov	esi, ecx
; Line 603
	push	0
	push	0
	mov	DWORD PTR [esi], 0
	mov	DWORD PTR [esi+4], 0
	call	?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
	mov	DWORD PTR [esi], eax
; Line 604
	mov	eax, esi
	pop	esi
	ret	0
??0?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_List_alloc<std::_List_base_types<int,std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Myval@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 596
	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 8
; Line 597
	ret	0
?_Myval@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 591
	mov	eax, DWORD PTR __Pnode$[esp-4]
	add	eax, 4
; Line 592
	ret	0
?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 586
	mov	eax, DWORD PTR __Pnode$[esp-4]
; Line 587
	ret	0
?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 1008
	mov	eax, 357913941				; 15555555H
; Line 1009
	ret	4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 987
	jmp	?deallocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ; std::allocator<std::_List_node<int,void *> >::deallocate
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 976
	jmp	?allocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ; std::allocator<std::_List_node<int,void *> >::allocate
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 937
	mov	eax, ecx
	ret	0
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@HPAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@HPAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 869
	mov	eax, 357913941				; 15555555H
; Line 870
	ret	0
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@HPAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?max_size@?$allocator@U?$_List_node@HPAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$_List_node@HPAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_node<int,void *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 749
	mov	eax, 357913941				; 15555555H
; Line 750
	ret	0
?max_size@?$allocator@U?$_List_node@HPAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_node<int,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?allocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z PROC ; std::allocator<std::_List_node<int,void *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 725
	mov	eax, DWORD PTR __Count$[esp-4]
	test	eax, eax
	jne	SHORT $LN4@allocate
$LN12@allocate:
; Line 726
	ret	4
; Line 725
$LN4@allocate:
	cmp	eax, 357913941				; 15555555H
	ja	SHORT $LN14@allocate
	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 2
	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN6@allocate
	lea	ecx, DWORD PTR [eax+35]
	cmp	ecx, eax
	jbe	SHORT $LN16@allocate
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4
	test	ecx, ecx
	je	SHORT $LN17@allocate
	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR [eax-4], ecx
; Line 726
	ret	4
$LN6@allocate:
; Line 725
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN12@allocate
	jmp	SHORT $LN18@allocate
$LN14@allocate:
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN19@allocate:
$LN16@allocate:
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN20@allocate:
$LN17@allocate:
	call	__invalid_parameter_noinfo_noreturn
$LN21@allocate:
$LN18@allocate:
	call	__invalid_parameter_noinfo_noreturn
$LN22@allocate:
$LN13@allocate:
	int	3
?allocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ENDP ; std::allocator<std::_List_node<int,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?deallocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z PROC ; std::allocator<std::_List_node<int,void *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 720
	mov	eax, DWORD PTR __Count$[esp-4]
	mov	ecx, DWORD PTR __Ptr$[esp-4]
	cmp	eax, 357913941				; 15555555H
	ja	SHORT $LN13@deallocate
	lea	eax, DWORD PTR [eax+eax*2]
	shl	eax, 2
	cmp	eax, 4096				; 00001000H
	jb	SHORT $LN5@deallocate
	test	cl, 31					; 0000001fH
	jne	SHORT $LN15@deallocate
	mov	eax, DWORD PTR [ecx-4]
	cmp	eax, ecx
	jae	SHORT $LN16@deallocate
	sub	ecx, eax
	cmp	ecx, 4
	jb	SHORT $LN17@deallocate
	cmp	ecx, 35					; 00000023H
	ja	SHORT $LN18@deallocate
	mov	ecx, eax
$LN5@deallocate:
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
; Line 721
	ret	8
$LN13@deallocate:
; Line 720
	call	__invalid_parameter_noinfo_noreturn
$LN19@deallocate:
$LN15@deallocate:
	call	__invalid_parameter_noinfo_noreturn
$LN20@deallocate:
$LN16@deallocate:
	call	__invalid_parameter_noinfo_noreturn
$LN21@deallocate:
$LN17@deallocate:
	call	__invalid_parameter_noinfo_noreturn
$LN22@deallocate:
$LN18@deallocate:
	call	__invalid_parameter_noinfo_noreturn
$LN23@deallocate:
$LN12@deallocate:
	int	3
?deallocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ENDP ; std::allocator<std::_List_node<int,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0?$allocator@U?$_List_node@HPAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$_List_node@HPAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<int,void *> >::allocator<std::_List_node<int,void *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 701
	mov	eax, ecx
	ret	0
??0?$allocator@U?$_List_node@HPAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<int,void *> >::allocator<std::_List_node<int,void *> >
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__EStart@@YAXXZ
text$di	SEGMENT
_F$1 = -28						; size = 8
_S$2 = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
??__EStart@@YAXXZ PROC					; `dynamic initializer for 'Start'', COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 128
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+28], eax
	xor	eax, eax
	xorps	xmm0, xmm0
	mov	WORD PTR _S$2[esp+28], ax
	mov	DWORD PTR _S$2[esp+38], eax
	mov	WORD PTR _S$2[esp+42], ax
	mov	DWORD PTR _F$1[esp+28], eax
	mov	DWORD PTR _F$1[esp+32], eax
	lea	eax, DWORD PTR _S$2[esp+28]
	push	eax
	movq	QWORD PTR _S$2[esp+34], xmm0
	call	DWORD PTR __imp__GetSystemTime@4
	lea	eax, DWORD PTR _F$1[esp+28]
	push	eax
	lea	eax, DWORD PTR _S$2[esp+32]
	push	eax
	call	DWORD PTR __imp__SystemTimeToFileTime@8
	push	0
	push	10000					; 00002710H
	push	DWORD PTR _F$1[esp+40]
	push	DWORD PTR _F$1[esp+40]
	call	__alldiv
	mov	ecx, DWORD PTR __$ArrayPad$[esp+28]
	xor	ecx, esp
	mov	DWORD PTR ?Start@@3_JA, eax
	mov	DWORD PTR ?Start@@3_JA+4, edx
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	ret	0
??__EStart@@YAXXZ ENDP					; `dynamic initializer for 'Start''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__FBufferNotEmpty@@YAXXZ
text$yd	SEGMENT
??__FBufferNotEmpty@@YAXXZ PROC				; `dynamic atexit destructor for 'BufferNotEmpty'', COMDAT
	ret	0
??__FBufferNotEmpty@@YAXXZ ENDP				; `dynamic atexit destructor for 'BufferNotEmpty''
text$yd	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__EBufferNotEmpty@@YAXXZ
text$di	SEGMENT
??__EBufferNotEmpty@@YAXXZ PROC				; `dynamic initializer for 'BufferNotEmpty'', COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 126
	push	OFFSET ?BufferNotEmpty@@3VCConditionVariable@@A ; BufferNotEmpty
	call	DWORD PTR __imp__InitializeConditionVariable@4
	push	OFFSET ??__FBufferNotEmpty@@YAXXZ	; `dynamic atexit destructor for 'BufferNotEmpty''
	call	_atexit
	pop	ecx
	ret	0
??__EBufferNotEmpty@@YAXXZ ENDP				; `dynamic initializer for 'BufferNotEmpty''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__FBufferNotFull@@YAXXZ
text$yd	SEGMENT
??__FBufferNotFull@@YAXXZ PROC				; `dynamic atexit destructor for 'BufferNotFull'', COMDAT
	ret	0
??__FBufferNotFull@@YAXXZ ENDP				; `dynamic atexit destructor for 'BufferNotFull''
text$yd	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__EBufferNotFull@@YAXXZ
text$di	SEGMENT
??__EBufferNotFull@@YAXXZ PROC				; `dynamic initializer for 'BufferNotFull'', COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 125
	push	OFFSET ?BufferNotFull@@3VCConditionVariable@@A ; BufferNotFull
	call	DWORD PTR __imp__InitializeConditionVariable@4
	push	OFFSET ??__FBufferNotFull@@YAXXZ	; `dynamic atexit destructor for 'BufferNotFull''
	call	_atexit
	pop	ecx
	ret	0
??__EBufferNotFull@@YAXXZ ENDP				; `dynamic initializer for 'BufferNotFull''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__FCriticalSection@@YAXXZ
text$yd	SEGMENT
??__FCriticalSection@@YAXXZ PROC			; `dynamic atexit destructor for 'CriticalSection'', COMDAT
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	call	DWORD PTR __imp__DeleteCriticalSection@4
	ret	0
??__FCriticalSection@@YAXXZ ENDP			; `dynamic atexit destructor for 'CriticalSection''
text$yd	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??__ECriticalSection@@YAXXZ
text$di	SEGMENT
??__ECriticalSection@@YAXXZ PROC			; `dynamic initializer for 'CriticalSection'', COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 124
	push	OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
	call	DWORD PTR __imp__InitializeCriticalSection@4
	push	OFFSET ??__FCriticalSection@@YAXXZ	; `dynamic atexit destructor for 'CriticalSection''
	call	_atexit
	pop	ecx
	ret	0
??__ECriticalSection@@YAXXZ ENDP			; `dynamic initializer for 'CriticalSection''
text$di	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?GetTimeMs@@YA_JXZ
_TEXT	SEGMENT
_F$ = -28						; size = 8
_S$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GetTimeMs@@YA_JXZ PROC					; GetTimeMs, COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 111
	sub	esp, 28					; 0000001cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+28], eax
; Line 112
	xor	eax, eax
	xorps	xmm0, xmm0
	mov	WORD PTR _S$[esp+28], ax
	mov	DWORD PTR _S$[esp+38], eax
	mov	WORD PTR _S$[esp+42], ax
; Line 113
	mov	DWORD PTR _F$[esp+28], eax
	mov	DWORD PTR _F$[esp+32], eax
; Line 114
	lea	eax, DWORD PTR _S$[esp+28]
	push	eax
	movq	QWORD PTR _S$[esp+34], xmm0
	call	DWORD PTR __imp__GetSystemTime@4
; Line 115
	lea	eax, DWORD PTR _F$[esp+28]
	push	eax
	lea	eax, DWORD PTR _S$[esp+32]
	push	eax
	call	DWORD PTR __imp__SystemTimeToFileTime@8
; Line 119
	push	0
	push	10000					; 00002710H
	push	DWORD PTR _F$[esp+40]
	push	DWORD PTR _F$[esp+40]
	call	__alldiv
; Line 120
	mov	ecx, DWORD PTR __$ArrayPad$[esp+28]
	xor	ecx, esp
	call	@__security_check_cookie@4
	add	esp, 28					; 0000001cH
	ret	0
?GetTimeMs@@YA_JXZ ENDP					; GetTimeMs
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1CConditionVariable@@QAE@XZ
_TEXT	SEGMENT
??1CConditionVariable@@QAE@XZ PROC			; CConditionVariable::~CConditionVariable, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 90
	ret	0
??1CConditionVariable@@QAE@XZ ENDP			; CConditionVariable::~CConditionVariable
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?WakeUp@CConditionVariable@@QAEXXZ
_TEXT	SEGMENT
?WakeUp@CConditionVariable@@QAEXXZ PROC			; CConditionVariable::WakeUp, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 80
	push	ecx
	call	DWORD PTR __imp__WakeConditionVariable@4
; Line 81
	ret	0
?WakeUp@CConditionVariable@@QAEXXZ ENDP			; CConditionVariable::WakeUp
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Sleep@CConditionVariable@@QAEXAAVCCriticalSection@@@Z
_TEXT	SEGMENT
_CriticalSection$ = 8					; size = 4
?Sleep@CConditionVariable@@QAEXAAVCCriticalSection@@@Z PROC ; CConditionVariable::Sleep, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 75
	push	-1
	push	DWORD PTR _CriticalSection$[esp]
	push	ecx
	call	DWORD PTR __imp__SleepConditionVariableCS@12
; Line 76
	ret	4
?Sleep@CConditionVariable@@QAEXAAVCCriticalSection@@@Z ENDP ; CConditionVariable::Sleep
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0CConditionVariable@@QAE@XZ
_TEXT	SEGMENT
??0CConditionVariable@@QAE@XZ PROC			; CConditionVariable::CConditionVariable, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 68
	push	esi
	mov	esi, ecx
; Line 70
	push	esi
	call	DWORD PTR __imp__InitializeConditionVariable@4
; Line 71
	mov	eax, esi
	pop	esi
	ret	0
??0CConditionVariable@@QAE@XZ ENDP			; CConditionVariable::CConditionVariable
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Leave@CCriticalSection@@QAEXXZ
_TEXT	SEGMENT
?Leave@CCriticalSection@@QAEXXZ PROC			; CCriticalSection::Leave, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 58
	push	ecx
	call	DWORD PTR __imp__LeaveCriticalSection@4
; Line 59
	ret	0
?Leave@CCriticalSection@@QAEXXZ ENDP			; CCriticalSection::Leave
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?Enter@CCriticalSection@@QAEXXZ
_TEXT	SEGMENT
?Enter@CCriticalSection@@QAEXXZ PROC			; CCriticalSection::Enter, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 53
	push	ecx
	call	DWORD PTR __imp__EnterCriticalSection@4
; Line 54
	ret	0
?Enter@CCriticalSection@@QAEXXZ ENDP			; CCriticalSection::Enter
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??1CCriticalSection@@QAE@XZ
_TEXT	SEGMENT
??1CCriticalSection@@QAE@XZ PROC			; CCriticalSection::~CCriticalSection, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 48
	push	ecx
	call	DWORD PTR __imp__DeleteCriticalSection@4
; Line 49
	ret	0
??1CCriticalSection@@QAE@XZ ENDP			; CCriticalSection::~CCriticalSection
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??0CCriticalSection@@QAE@XZ
_TEXT	SEGMENT
??0CCriticalSection@@QAE@XZ PROC			; CCriticalSection::CCriticalSection, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 41
	push	esi
	mov	esi, ecx
; Line 43
	push	esi
	call	DWORD PTR __imp__InitializeCriticalSection@4
; Line 44
	mov	eax, esi
	pop	esi
	ret	0
??0CCriticalSection@@QAE@XZ ENDP			; CCriticalSection::CCriticalSection
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 94
	or	eax, -1
	mov	ecx, DWORD PTR __Count$[esp-4]
	xor	edx, edx
	div	DWORD PTR __Sz$[esp-4]
	cmp	ecx, eax
	ja	__invalid_parameter_noinfo_noreturn
; Line 95
	imul	ecx, DWORD PTR __Sz$[esp-4]
; Line 96
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN9@Deallocate
; Line 99
	mov	eax, DWORD PTR __Ptr$[esp-4]
	test	al, 31					; 0000001fH
	jne	__invalid_parameter_noinfo_noreturn
; Line 103
	mov	ecx, DWORD PTR [eax-4]
; Line 114
	cmp	ecx, eax
	jae	__invalid_parameter_noinfo_noreturn
; Line 121
	sub	eax, ecx
	cmp	eax, 4
	jb	__invalid_parameter_noinfo_noreturn
; Line 125
	cmp	eax, 35					; 00000023H
	jbe	SHORT $LN3@Deallocate
	jmp	__invalid_parameter_noinfo_noreturn
$LN9@Deallocate:
; Line 128
	mov	ecx, DWORD PTR __Ptr$[esp-4]
$LN3@Deallocate:
; Line 132
	push	ecx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
; Line 133
	ret	0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 51
	mov	ecx, DWORD PTR __Count$[esp-4]
	test	ecx, ecx
	jne	SHORT $LN2@Allocate
; Line 52
	xor	eax, eax
; Line 87
	ret	0
$LN2@Allocate:
; Line 55
	or	eax, -1
	xor	edx, edx
	div	DWORD PTR __Sz$[esp-4]
	cmp	eax, ecx
	jb	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
; Line 57
	imul	ecx, DWORD PTR __Sz$[esp-4]
; Line 61
	cmp	BYTE PTR __Try_aligned_allocation$[esp-4], 0
	je	SHORT $LN4@Allocate
	cmp	ecx, 4096				; 00001000H
	jb	SHORT $LN4@Allocate
; Line 65
	lea	eax, DWORD PTR [ecx+35]
; Line 66
	cmp	eax, ecx
	jbe	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
; Line 69
	push	eax
	call	??2@YAPAXI@Z				; operator new
	mov	ecx, eax
	add	esp, 4
; Line 70
	test	ecx, ecx
	je	__invalid_parameter_noinfo_noreturn
; Line 71
	lea	eax, DWORD PTR [ecx+35]
	and	eax, -32				; ffffffe0H
; Line 73
	mov	DWORD PTR [eax-4], ecx
; Line 87
	ret	0
$LN4@Allocate:
; Line 83
	push	ecx
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 84
	test	eax, eax
	je	__invalid_parameter_noinfo_noreturn
; Line 87
	ret	0
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 55
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
; Line 89
	mov	eax, DWORD PTR __Where$[esp-4]
; Line 90
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; Line 950
	push	esi
; Line 954
	mov	esi, DWORD PTR __Format$[esp]
	push	1
	call	___acrt_iob_func
	add	esp, 4
	lea	ecx, DWORD PTR __Format$[esp+4]
	push	ecx
	push	0
	push	esi
	push	eax
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
	pop	esi
; Line 957
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<char const * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
; Line 146
	ret	0
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<char const * const>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; Line 639
	push	DWORD PTR __ArgList$[esp-4]
	push	DWORD PTR __Locale$[esp]
	push	DWORD PTR __Format$[esp+4]
	push	DWORD PTR __Stream$[esp+8]
	call	___local_stdio_printf_options
	push	DWORD PTR [eax+4]
	push	DWORD PTR [eax]
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 640
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
; Line 75
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 76
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
