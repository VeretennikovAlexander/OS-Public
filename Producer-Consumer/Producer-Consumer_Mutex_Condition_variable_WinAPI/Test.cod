; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24210.0 

	TITLE	g:\Data\Projects\Commands\OSNew\NotesTex\Examples\Synchronization\ConditionVariable\Test.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?N@@3IA						; N
PUBLIC	?Processed@@3_JA				; Processed
PUBLIC	?MaxItems@@3IA					; MaxItems
_BSS	SEGMENT
?Processed@@3_JA DQ 01H DUP (?)				; Processed
?MaxItems@@3IA DD 01H DUP (?)				; MaxItems
_BSS	ENDS
CONST	SEGMENT
$SG122396 DB	'OK', 0dH, 0aH, 00H
CONST	ENDS
_DATA	SEGMENT
?N@@3IA	DD	03e8H					; N
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
PUBLIC	_printf
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	?_Allocate@std@@YAPAXII_N@Z			; std::_Allocate
PUBLIC	?_Deallocate@std@@YAXPAXII@Z			; std::_Deallocate
PUBLIC	??0CCriticalSection@@QAE@XZ			; CCriticalSection::CCriticalSection
PUBLIC	??1CCriticalSection@@QAE@XZ			; CCriticalSection::~CCriticalSection
PUBLIC	?Enter@CCriticalSection@@QAEXXZ			; CCriticalSection::Enter
PUBLIC	?Leave@CCriticalSection@@QAEXXZ			; CCriticalSection::Leave
PUBLIC	??0CConditionVariable@@QAE@XZ			; CConditionVariable::CConditionVariable
PUBLIC	?Sleep@CConditionVariable@@QAEXAAVCCriticalSection@@@Z ; CConditionVariable::Sleep
PUBLIC	?WakeUp@CConditionVariable@@QAEXXZ		; CConditionVariable::WakeUp
PUBLIC	??1CConditionVariable@@QAE@XZ			; CConditionVariable::~CConditionVariable
PUBLIC	?GetTimeMs@@YA_JXZ				; GetTimeMs
PUBLIC	??0?$allocator@U?$_List_node@HPAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<int,void *> >::allocator<std::_List_node<int,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ; std::allocator<std::_List_node<int,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ; std::allocator<std::_List_node<int,void *> >::allocate
PUBLIC	?max_size@?$allocator@U?$_List_node@HPAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<int,void *> >::max_size
PUBLIC	?max_size@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@HPAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::max_size
PUBLIC	??0?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >
PUBLIC	?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::allocate
PUBLIC	?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::deallocate
PUBLIC	?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::max_size
PUBLIC	?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
PUBLIC	?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
PUBLIC	?_Myval@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myval
PUBLIC	??0?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_List_alloc<std::_List_base_types<int,std::allocator<int> > >
PUBLIC	??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::~_List_alloc<std::_List_base_types<int,std::allocator<int> > >
PUBLIC	?_Buyheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buyheadnode
PUBLIC	?_Freeheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Freeheadnode
PUBLIC	?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
PUBLIC	?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
PUBLIC	?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
PUBLIC	?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
PUBLIC	?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
PUBLIC	?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABIXZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
PUBLIC	??0?$_List_val@U?$_List_simple_types@H@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<int> >::_List_val<std::_List_simple_types<int> >
PUBLIC	?_Nextnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<int> >::_Nextnode
PUBLIC	?_Prevnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<int> >::_Prevnode
PUBLIC	?_Myval@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ; std::_List_val<std::_List_simple_types<int> >::_Myval
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second
PUBLIC	??0?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_List_buy<int,std::allocator<int> >::_List_buy<int,std::allocator<int> >
PUBLIC	?_Freenode@?$_List_buy@HV?$allocator@H@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ; std::_List_buy<int,std::allocator<int> >::_Freenode
PUBLIC	??1?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_List_buy<int,std::allocator<int> >::~_List_buy<int,std::allocator<int> >
PUBLIC	??0?$list@HV?$allocator@H@std@@@std@@QAE@XZ	; std::list<int,std::allocator<int> >::list<int,std::allocator<int> >
PUBLIC	?push_back@?$list@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::list<int,std::allocator<int> >::push_back
PUBLIC	??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ	; std::list<int,std::allocator<int> >::~list<int,std::allocator<int> >
PUBLIC	?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ ; std::list<int,std::allocator<int> >::end
PUBLIC	?_Unchecked_end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ ; std::list<int,std::allocator<int> >::_Unchecked_end
PUBLIC	?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ; std::list<int,std::allocator<int> >::_Make_iter
PUBLIC	?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ	; std::list<int,std::allocator<int> >::size
PUBLIC	?max_size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ; std::list<int,std::allocator<int> >::max_size
PUBLIC	?pop_back@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ; std::list<int,std::allocator<int> >::pop_back
PUBLIC	?_Unlinknode@?$list@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ; std::list<int,std::allocator<int> >::_Unlinknode
PUBLIC	?erase@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ; std::list<int,std::allocator<int> >::erase
PUBLIC	?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ	; std::list<int,std::allocator<int> >::clear
PUBLIC	?_Tidy@?$list@HV?$allocator@H@std@@@std@@QAEXXZ	; std::list<int,std::allocator<int> >::_Tidy
PUBLIC	?_Incsize@?$list@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::list<int,std::allocator<int> >::_Incsize
PUBLIC	?Produce@CProducerThread@@AAEHXZ		; CProducerThread::Produce
PUBLIC	?ExecuteOne@CProducerThread@@AAEXXZ		; CProducerThread::ExecuteOne
PUBLIC	?Execute@CProducerThread@@AAEXXZ		; CProducerThread::Execute
PUBLIC	?ThreadProc@CProducerThread@@CGKPAX@Z		; CProducerThread::ThreadProc
PUBLIC	??0CProducerThread@@QAE@XZ			; CProducerThread::CProducerThread
PUBLIC	?Wait@CProducerThread@@QAEXXZ			; CProducerThread::Wait
PUBLIC	??0?$CLock@VCCriticalSection@@@@QAE@AAVCCriticalSection@@@Z ; CLock<CCriticalSection>::CLock<CCriticalSection>
PUBLIC	??1?$CLock@VCCriticalSection@@@@QAE@XZ		; CLock<CCriticalSection>::~CLock<CCriticalSection>
PUBLIC	?CheckProcessed@CConsumerThread@@AAEXXZ		; CConsumerThread::CheckProcessed
PUBLIC	?ExecuteOne@CConsumerThread@@AAEXXZ		; CConsumerThread::ExecuteOne
PUBLIC	?Execute@CConsumerThread@@AAEXXZ		; CConsumerThread::Execute
PUBLIC	?ThreadProc@CConsumerThread@@CGKPAX@Z		; CConsumerThread::ThreadProc
PUBLIC	??0CConsumerThread@@QAE@XZ			; CConsumerThread::CConsumerThread
PUBLIC	?Wait@CConsumerThread@@QAEXXZ			; CConsumerThread::Wait
PUBLIC	_main
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>
PUBLIC	?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@HPAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_Mynode
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++
PUBLIC	??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_iterator<std::_List_val<std::_List_simple_types<int> > >
PUBLIC	??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >
PUBLIC	??$forward@H@std@@YA$$QAHAAH@Z			; std::forward<int>
PUBLIC	??$_Insert@H@?$list@HV?$allocator@H@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@$$QAH@Z ; std::list<int,std::allocator<int> >::_Insert<int>
PUBLIC	??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<int,void *> *>
PUBLIC	??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1><>
PUBLIC	??$addressof@H@std@@YAPAHAAH@Z			; std::addressof<int>
PUBLIC	??$destroy@H@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<int>
PUBLIC	??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
PUBLIC	??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>
PUBLIC	??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
PUBLIC	??$destroy@H@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<int>
PUBLIC	??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::forward<std::_List_node<int,void *> * &>
PUBLIC	??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
PUBLIC	??$construct@HH@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH$$QAH@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<int,int>
PUBLIC	??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::allocator<std::_List_node<int,void *> >::destroy<std::_List_node<int,void *> *>
PUBLIC	??$destroy@H@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH@Z ; std::allocator<std::_List_node<int,void *> >::destroy<int>
PUBLIC	??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<int,void *> >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
PUBLIC	??$construct@HH@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH$$QAH@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<int,int>
PUBLIC	??$construct@HH@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH$$QAH@Z ; std::allocator<std::_List_node<int,void *> >::construct<int,int>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?CriticalSection@@3VCCriticalSection@@A		; CriticalSection
PUBLIC	?BufferNotFull@@3VCConditionVariable@@A		; BufferNotFull
PUBLIC	?BufferNotEmpty@@3VCConditionVariable@@A	; BufferNotEmpty
PUBLIC	?Start@@3_JA					; Start
PUBLIC	?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A	; Queue
PUBLIC	??_C@_0DL@HDGCFIPI@Processed?5?$CFd?0?5max?5?$CFd?0?5current?5?$CFd@ ; `string'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ ; `string'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__InitializeConditionVariable@4:PROC
EXTRN	__imp__WakeConditionVariable@4:PROC
EXTRN	__imp__SleepConditionVariableCS@12:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	__imp__GetSystemTime@4:PROC
EXTRN	__imp__SystemTimeToFileTime@8:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__alldiv:PROC
EXTRN	__allmul:PROC
EXTRN	__allrem:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?CriticalSection@@3VCCriticalSection@@A DB 018H DUP (?)	; CriticalSection
?BufferNotFull@@3VCConditionVariable@@A DD 01H DUP (?)	; BufferNotFull
?BufferNotEmpty@@3VCConditionVariable@@A DD 01H DUP (?)	; BufferNotEmpty
	ALIGN	8

?Start@@3_JA DQ	01H DUP (?)				; Start
?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A DQ 01H DUP (?) ; Queue
_BSS	ENDS
CRT$XCU	SEGMENT
?CriticalSection$initializer$@@3P6AXXZA DD FLAT:??__ECriticalSection@@YAXXZ ; CriticalSection$initializer$
CRT$XCU	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@HDGCFIPI@Processed?5?$CFd?0?5max?5?$CFd?0?5current?5?$CFd@
CONST	SEGMENT
??_C@_0DL@HDGCFIPI@Processed?5?$CFd?0?5max?5?$CFd?0?5current?5?$CFd@ DB 'P'
	DB	'rocessed %d, max %d, current %d, time %d, per second %d', 0dH
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z$0
__unwindtable$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z$2
__ehfuncinfo$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ExecuteOne@CConsumerThread@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteOne@CConsumerThread@@AAEXXZ$0
__ehfuncinfo$?ExecuteOne@CConsumerThread@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ExecuteOne@CConsumerThread@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$CLock@VCCriticalSection@@@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?ExecuteOne@CProducerThread@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?ExecuteOne@CProducerThread@@AAEXXZ$0
__ehfuncinfo$?ExecuteOne@CProducerThread@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?ExecuteOne@CProducerThread@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z$0
__unwindtable$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z$2
__ehfuncinfo$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z
	DD	01H
	DD	FLAT:__tryblocktable$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
CRT$XCU	SEGMENT
?BufferNotFull$initializer$@@3P6AXXZA DD FLAT:??__EBufferNotFull@@YAXXZ ; BufferNotFull$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?BufferNotEmpty$initializer$@@3P6AXXZA DD FLAT:??__EBufferNotEmpty@@YAXXZ ; BufferNotEmpty$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?Start$initializer$@@3P6AXXZA DD FLAT:??__EStart@@YAXXZ	; Start$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?Queue$initializer$@@3P6AXXZA DD FLAT:??__EQueue@@YAXXZ	; Queue$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@HH@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH$$QAH@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv73 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@HH@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH$$QAH@Z PROC ; std::allocator<std::_List_node<int,void *> >::construct<int,int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 736
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 737
  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	6a 04		 push	 4
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00014	83 c4 08	 add	 esp, 8
  00017	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0001a	83 7d fc 00	 cmp	 DWORD PTR $T1[ebp], 0
  0001e	74 1b		 je	 SHORT $LN3@construct
  00020	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  00029	83 c4 04	 add	 esp, 4
  0002c	8b 55 fc	 mov	 edx, DWORD PTR $T1[ebp]
  0002f	8b 00		 mov	 eax, DWORD PTR [eax]
  00031	89 02		 mov	 DWORD PTR [edx], eax
  00033	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00036	89 4d f8	 mov	 DWORD PTR tv73[ebp], ecx
  00039	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  0003b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:
; Line 738
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
??$construct@HH@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH$$QAH@Z ENDP ; std::allocator<std::_List_node<int,void *> >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@HH@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH$$QAH@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@HH@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH$$QAH@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<int,int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 856
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 857
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@HH@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH$$QAH@Z ; std::allocator<std::_List_node<int,void *> >::construct<int,int>
; Line 858
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??$construct@HH@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH$$QAH@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv73 = -8						; size = 4
$T1 = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z PROC ; std::allocator<std::_List_node<int,void *> >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 736
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 737
  00009	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000c	50		 push	 eax
  0000d	6a 04		 push	 4
  0000f	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00014	83 c4 08	 add	 esp, 8
  00017	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  0001a	83 7d fc 00	 cmp	 DWORD PTR $T1[ebp], 0
  0001e	74 1b		 je	 SHORT $LN3@construct
  00020	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::forward<std::_List_node<int,void *> * &>
  00029	83 c4 04	 add	 esp, 4
  0002c	8b 55 fc	 mov	 edx, DWORD PTR $T1[ebp]
  0002f	8b 00		 mov	 eax, DWORD PTR [eax]
  00031	89 02		 mov	 DWORD PTR [edx], eax
  00033	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00036	89 4d f8	 mov	 DWORD PTR tv73[ebp], ecx
  00039	eb 07		 jmp	 SHORT $LN1@construct
$LN3@construct:
  0003b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN1@construct:
; Line 738
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 08 00	 ret	 8
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ENDP ; std::allocator<std::_List_node<int,void *> >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@H@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@H@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH@Z PROC ; std::allocator<std::_List_node<int,void *> >::destroy<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 743
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 745
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
??$destroy@H@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH@Z ENDP ; std::allocator<std::_List_node<int,void *> >::destroy<int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z PROC ; std::allocator<std::_List_node<int,void *> >::destroy<std::_List_node<int,void *> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 743
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 745
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ENDP ; std::allocator<std::_List_node<int,void *> >::destroy<std::_List_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@HH@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH$$QAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@HH@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH$$QAH@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<int,int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 994
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 995
  00007	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00017	51		 push	 ecx
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	52		 push	 edx
  0001c	e8 00 00 00 00	 call	 ??$construct@HH@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH$$QAH@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<int,int>
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 997
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??$construct@HH@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH$$QAH@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@AAPAU31@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@AAPAU31@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 856
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 857
  00003	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::forward<std::_List_node<int,void *> * &>
  0000c	83 c4 04	 add	 esp, 4
  0000f	50		 push	 eax
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00017	e8 00 00 00 00	 call	 ??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ; std::allocator<std::_List_node<int,void *> >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
; Line 858
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@AAPAU31@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<int,void *> * &>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1275
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1276
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1277
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@H@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@H@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 863
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 864
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@H@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAH@Z ; std::allocator<std::_List_node<int,void *> >::destroy<int>
; Line 865
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??$destroy@H@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 863
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 864
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  0000a	e8 00 00 00 00	 call	 ??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::allocator<std::_List_node<int,void *> >::destroy<std::_List_node<int,void *> *>
; Line 865
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z
_TEXT	SEGMENT
tv131 = -28						; size = 4
__Pnode$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
_<_Val_0>$ = 16						; size = 4
??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z PROC ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 831
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 832
  0002f	8b 45 0c	 mov	 eax, DWORD PTR __Prev$[ebp]
  00032	50		 push	 eax
  00033	8b 4d 08	 mov	 ecx, DWORD PTR __Next$[ebp]
  00036	51		 push	 ecx
  00037	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	e8 00 00 00 00	 call	 ?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
  0003f	89 45 e8	 mov	 DWORD PTR __Pnode$[ebp], eax
; Line 834
  00042	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 835
  00049	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 ?_Myval@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myval
  00052	83 c4 04	 add	 esp, 4
  00055	89 45 e4	 mov	 DWORD PTR tv131[ebp], eax
  00058	8b 45 10	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  00061	83 c4 04	 add	 esp, 4
  00064	50		 push	 eax
  00065	8b 4d e4	 mov	 ecx, DWORD PTR tv131[ebp]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$addressof@H@std@@YAPAHAAH@Z ; std::addressof<int>
  0006e	83 c4 04	 add	 esp, 4
  00071	50		 push	 eax
  00072	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??$construct@HH@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH$$QAH@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<int,int>
  00081	eb 24		 jmp	 SHORT $LN4@Buynode
__catch$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z$0:
; Line 839
  00083	6a 01		 push	 1
  00085	8b 55 e8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00088	52		 push	 edx
  00089	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0008c	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::deallocate
; Line 840
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 841
  000a1	b8 00 00 00 00	 mov	 eax, $LN7@Buynode
  000a6	c3		 ret	 0
$LN4@Buynode:
  000a7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000ae	eb 07		 jmp	 SHORT __tryend$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z$1
$LN7@Buynode:
  000b0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z$1:
; Line 843
  000b7	8b 45 e8	 mov	 eax, DWORD PTR __Pnode$[ebp]
$LN3@Buynode:
; Line 844
  000ba	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c4	59		 pop	 ecx
  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a e0	 mov	 ecx, DWORD PTR [edx-32]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z ENDP ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>
; Function compile flags: /Odtp
;	COMDAT ??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 994
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 995
  00007	8b 45 0c	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??$forward@AAPAU?$_List_node@HPAX@std@@@std@@YAAAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::forward<std::_List_node<int,void *> * &>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00017	51		 push	 ecx
  00018	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001b	52		 push	 edx
  0001c	e8 00 00 00 00	 call	 ??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@AAPAU31@@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 997
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@H@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@H@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 1002
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1003
  00007	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??$destroy@H@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAH@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<int>
  00014	83 c4 08	 add	 esp, 8
; Line 1004
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??$destroy@H@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@H@std@@YAPAHAAH@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@H@std@@YAPAHAAH@Z PROC			; std::addressof<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; Line 724
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 725
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 726
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@H@std@@YAPAHAAH@Z ENDP			; std::addressof<int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1><>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 280
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 279
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAE@XZ ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??0?$_List_val@U?$_List_simple_types@H@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<int> >::_List_val<std::_List_simple_types<int> >
; Line 281
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 1002
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1003
  00007	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 ??$destroy@PAU?$_List_node@HPAX@std@@@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@HPAX@std@@@1@PAPAU?$_List_node@HPAX@1@@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
  00014	83 c4 08	 add	 esp, 8
; Line 1004
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<int,void *> *>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xstddef
; Line 724
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 725
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
; Line 726
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<int,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$_Insert@H@?$list@HV?$allocator@H@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@$$QAH@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
__Newnode$ = -8						; size = 4
__Pnode$ = -4						; size = 4
__Where$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Insert@H@?$list@HV?$allocator@H@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@$$QAH@Z PROC ; std::list<int,std::allocator<int> >::_Insert<int>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1061
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1062
  00009	8d 4d 08	 lea	 ecx, DWORD PTR __Where$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@HPAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_Mynode
  00011	89 45 fc	 mov	 DWORD PTR __Pnode$[ebp], eax
; Line 1064
  00014	8b 45 0c	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  00017	50		 push	 eax
  00018	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  0001d	83 c4 04	 add	 esp, 4
  00020	50		 push	 eax
  00021	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00024	51		 push	 ecx
  00025	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
  0002a	83 c4 04	 add	 esp, 4
  0002d	8b 10		 mov	 edx, DWORD PTR [eax]
  0002f	52		 push	 edx
  00030	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00033	50		 push	 eax
  00034	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	e8 00 00 00 00	 call	 ??$_Buynode@H@?$_List_buy@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@1@PAU21@0$$QAH@Z ; std::_List_buy<int,std::allocator<int> >::_Buynode<int>
  0003c	89 45 f8	 mov	 DWORD PTR __Newnode$[ebp], eax
; Line 1066
  0003f	6a 01		 push	 1
  00041	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Incsize@?$list@HV?$allocator@H@std@@@std@@QAEXI@Z ; std::list<int,std::allocator<int> >::_Incsize
; Line 1067
  00049	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0004c	51		 push	 ecx
  0004d	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
  00052	83 c4 04	 add	 esp, 4
  00055	8b 55 f8	 mov	 edx, DWORD PTR __Newnode$[ebp]
  00058	89 10		 mov	 DWORD PTR [eax], edx
; Line 1068
  0005a	8b 45 f8	 mov	 eax, DWORD PTR __Newnode$[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
  00063	83 c4 04	 add	 esp, 4
  00066	8b 08		 mov	 ecx, DWORD PTR [eax]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
  0006e	83 c4 04	 add	 esp, 4
  00071	8b 55 f8	 mov	 edx, DWORD PTR __Newnode$[ebp]
  00074	89 10		 mov	 DWORD PTR [eax], edx
; Line 1069
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 08 00	 ret	 8
??$_Insert@H@?$list@HV?$allocator@H@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@$$QAH@Z ENDP ; std::list<int,std::allocator<int> >::_Insert<int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$forward@H@std@@YA$$QAHAAH@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@H@std@@YA$$QAHAAH@Z PROC			; std::forward<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\type_traits
; Line 1275
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 1276
  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]
; Line 1277
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@H@std@@YA$$QAHAAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 124
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 123
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>
; Line 125
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 388
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 389
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--
; Line 390
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 391
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_iterator<std::_List_val<std::_List_simple_types<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 348
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 347
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >
; Line 349
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_iterator<std::_List_val<std::_List_simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 256
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 275
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<int> >::_Prevnode
  00012	83 c4 04	 add	 esp, 4
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	89 02		 mov	 DWORD PTR [edx], eax
; Line 278
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 279
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE?AV01@H@Z
_TEXT	SEGMENT
__Tmp$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE?AV01@H@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 249
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 250
  00009	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d f8	 mov	 DWORD PTR __Tmp$[ebp], ecx
; Line 251
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	e8 00 00 00 00	 call	 ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++
; Line 252
  00019	8b 55 08	 mov	 edx, DWORD PTR ___$ReturnUdt$[ebp]
  0001c	8b 45 f8	 mov	 eax, DWORD PTR __Tmp$[ebp]
  0001f	89 02		 mov	 DWORD PTR [edx], eax
  00021	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 253
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE?AV01@H@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 226
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 244
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<int> >::_Nextnode
  00012	83 c4 04	 add	 esp, 4
  00015	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	89 02		 mov	 DWORD PTR [edx], eax
; Line 245
  0001c	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 246
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 187
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 186
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Plist$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>
; Line 188
  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@HPAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@HPAX@2@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_Mynode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 95
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 96
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 97
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@HPAX@2@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_Mynode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 44
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 43
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
; Line 45
  0000f	8b 55 0c	 mov	 edx, DWORD PTR __Plist$[ebp]
  00012	52		 push	 edx
  00013	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00016	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ; std::_Iterator_base0::_Adopt
; Line 46
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 08 00	 ret	 8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_C$ = -8						; size = 4
_P$ = -4						; size = 4
_args$ = 8						; size = 4
_main	PROC
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 276
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 277
  00006	8d 4d fc	 lea	 ecx, DWORD PTR _P$[ebp]
  00009	e8 00 00 00 00	 call	 ??0CProducerThread@@QAE@XZ ; CProducerThread::CProducerThread
; Line 280
  0000e	8d 4d f8	 lea	 ecx, DWORD PTR _C$[ebp]
  00011	e8 00 00 00 00	 call	 ??0CConsumerThread@@QAE@XZ ; CConsumerThread::CConsumerThread
; Line 285
  00016	8d 4d fc	 lea	 ecx, DWORD PTR _P$[ebp]
  00019	e8 00 00 00 00	 call	 ?Wait@CProducerThread@@QAEXXZ ; CProducerThread::Wait
; Line 286
  0001e	8d 4d f8	 lea	 ecx, DWORD PTR _C$[ebp]
  00021	e8 00 00 00 00	 call	 ?Wait@CConsumerThread@@QAEXXZ ; CConsumerThread::Wait
; Line 288
  00026	68 00 00 00 00	 push	 OFFSET $SG122396
  0002b	e8 00 00 00 00	 call	 _printf
  00030	83 c4 04	 add	 esp, 4
; Line 289
  00033	33 c0		 xor	 eax, eax
; Line 290
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Wait@CConsumerThread@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Wait@CConsumerThread@@QAEXXZ PROC			; CConsumerThread::Wait, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 266
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 267
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 ff	 cmp	 DWORD PTR [eax], -1
  0000d	74 0e		 je	 SHORT $LN1@Wait
; Line 269
  0000f	6a ff		 push	 -1
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	52		 push	 edx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
$LN1@Wait:
; Line 271
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?Wait@CConsumerThread@@QAEXXZ ENDP			; CConsumerThread::Wait
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CConsumerThread@@QAE@XZ
_TEXT	SEGMENT
_ThreadId$ = -8						; size = 4
_this$ = -4						; size = 4
??0CConsumerThread@@QAE@XZ PROC				; CConsumerThread::CConsumerThread, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 259
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 262
  00009	8d 45 f8	 lea	 eax, DWORD PTR _ThreadId$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	51		 push	 ecx
  00013	68 00 00 00 00	 push	 OFFSET ?ThreadProc@CConsumerThread@@CGKPAX@Z ; CConsumerThread::ThreadProc
  00018	6a 00		 push	 0
  0001a	6a 00		 push	 0
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateThread@24
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	89 02		 mov	 DWORD PTR [edx], eax
; Line 263
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??0CConsumerThread@@QAE@XZ ENDP				; CConsumerThread::CConsumerThread
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?ThreadProc@CConsumerThread@@CGKPAX@Z
_TEXT	SEGMENT
_Args$ = -4						; size = 4
_lpParameter$ = 8					; size = 4
?ThreadProc@CConsumerThread@@CGKPAX@Z PROC		; CConsumerThread::ThreadProc, COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 247
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 248
  00004	8b 45 08	 mov	 eax, DWORD PTR _lpParameter$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR _Args$[ebp], eax
; Line 250
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _Args$[ebp]
  0000d	e8 00 00 00 00	 call	 ?Execute@CConsumerThread@@AAEXXZ ; CConsumerThread::Execute
; Line 252
  00012	33 c0		 xor	 eax, eax
; Line 253
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?ThreadProc@CConsumerThread@@CGKPAX@Z ENDP		; CConsumerThread::ThreadProc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Execute@CConsumerThread@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Execute@CConsumerThread@@AAEXXZ PROC			; CConsumerThread::Execute, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 237
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@Execute:
; Line 238
  00007	b8 01 00 00 00	 mov	 eax, 1
  0000c	85 c0		 test	 eax, eax
  0000e	74 0a		 je	 SHORT $LN1@Execute
; Line 240
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ExecuteOne@CConsumerThread@@AAEXXZ ; CConsumerThread::ExecuteOne
; Line 241
  00018	eb ed		 jmp	 SHORT $LN2@Execute
$LN1@Execute:
; Line 242
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?Execute@CConsumerThread@@AAEXXZ ENDP			; CConsumerThread::Execute
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?ExecuteOne@CConsumerThread@@AAEXXZ
_TEXT	SEGMENT
_Lock$ = -24						; size = 4
_this$ = -20						; size = 4
tv78 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?ExecuteOne@CConsumerThread@@AAEXXZ PROC		; CConsumerThread::ExecuteOne, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 218
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ExecuteOne@CConsumerThread@@AAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 219
  00028	68 00 00 00 00	 push	 OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
  0002d	8d 4d e8	 lea	 ecx, DWORD PTR _Lock$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$CLock@VCCriticalSection@@@@QAE@AAVCCriticalSection@@@Z ; CLock<CCriticalSection>::CLock<CCriticalSection>
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$LN2@ExecuteOne:
; Line 221
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  00041	e8 00 00 00 00	 call	 ?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ; std::list<int,std::allocator<int> >::size
  00046	85 c0		 test	 eax, eax
  00048	75 11		 jne	 SHORT $LN3@ExecuteOne
; Line 223
  0004a	68 00 00 00 00	 push	 OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
  0004f	b9 00 00 00 00	 mov	 ecx, OFFSET ?BufferNotEmpty@@3VCConditionVariable@@A ; BufferNotEmpty
  00054	e8 00 00 00 00	 call	 ?Sleep@CConditionVariable@@QAEXAAVCCriticalSection@@@Z ; CConditionVariable::Sleep
; Line 224
  00059	eb e1		 jmp	 SHORT $LN2@ExecuteOne
$LN3@ExecuteOne:
; Line 226
  0005b	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  00060	e8 00 00 00 00	 call	 ?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ; std::list<int,std::allocator<int> >::size
  00065	39 05 00 00 00
	00		 cmp	 DWORD PTR ?MaxItems@@3IA, eax ; MaxItems
  0006b	76 0a		 jbe	 SHORT $LN5@ExecuteOne
  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MaxItems@@3IA ; MaxItems
  00072	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
  00075	eb 0d		 jmp	 SHORT $LN6@ExecuteOne
$LN5@ExecuteOne:
  00077	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  0007c	e8 00 00 00 00	 call	 ?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ; std::list<int,std::allocator<int> >::size
  00081	89 45 f0	 mov	 DWORD PTR tv78[ebp], eax
$LN6@ExecuteOne:
  00084	8b 4d f0	 mov	 ecx, DWORD PTR tv78[ebp]
  00087	89 0d 00 00 00
	00		 mov	 DWORD PTR ?MaxItems@@3IA, ecx ; MaxItems
; Line 228
  0008d	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  00092	e8 00 00 00 00	 call	 ?pop_back@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ; std::list<int,std::allocator<int> >::pop_back
; Line 230
  00097	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0009a	e8 00 00 00 00	 call	 ?CheckProcessed@CConsumerThread@@AAEXXZ ; CConsumerThread::CheckProcessed
; Line 233
  0009f	b9 00 00 00 00	 mov	 ecx, OFFSET ?BufferNotFull@@3VCConditionVariable@@A ; BufferNotFull
  000a4	e8 00 00 00 00	 call	 ?WakeUp@CConditionVariable@@QAEXXZ ; CConditionVariable::WakeUp
; Line 234
  000a9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000b0	8d 4d e8	 lea	 ecx, DWORD PTR _Lock$[ebp]
  000b3	e8 00 00 00 00	 call	 ??1?$CLock@VCCriticalSection@@@@QAE@XZ ; CLock<CCriticalSection>::~CLock<CCriticalSection>
  000b8	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000bb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c2	59		 pop	 ecx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ExecuteOne@CConsumerThread@@AAEXXZ$0:
  00000	8d 4d e8	 lea	 ecx, DWORD PTR _Lock$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CLock@VCCriticalSection@@@@QAE@XZ ; CLock<CCriticalSection>::~CLock<CCriticalSection>
__ehhandler$?ExecuteOne@CConsumerThread@@AAEXXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ExecuteOne@CConsumerThread@@AAEXXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ExecuteOne@CConsumerThread@@AAEXXZ ENDP		; CConsumerThread::ExecuteOne
; Function compile flags: /Odtp
;	COMDAT ?CheckProcessed@CConsumerThread@@AAEXXZ
_TEXT	SEGMENT
_PerSecond$1 = -28					; size = 8
tv132 = -20						; size = 8
_Delta$2 = -12						; size = 8
_this$ = -4						; size = 4
?CheckProcessed@CConsumerThread@@AAEXXZ PROC		; CConsumerThread::CheckProcessed, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 204
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 205
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Processed@@3_JA
  0000e	83 c0 01	 add	 eax, 1
  00011	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?Processed@@3_JA+4
  00017	83 d1 00	 adc	 ecx, 0
  0001a	a3 00 00 00 00	 mov	 DWORD PTR ?Processed@@3_JA, eax
  0001f	89 0d 04 00 00
	00		 mov	 DWORD PTR ?Processed@@3_JA+4, ecx
; Line 207
  00025	6a 00		 push	 0
  00027	68 a0 86 01 00	 push	 100000			; 000186a0H
  0002c	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?Processed@@3_JA+4
  00032	52		 push	 edx
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Processed@@3_JA
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 __allrem
  0003e	89 45 ec	 mov	 DWORD PTR tv132[ebp], eax
  00041	89 55 f0	 mov	 DWORD PTR tv132[ebp+4], edx
  00044	8b 4d ec	 mov	 ecx, DWORD PTR tv132[ebp]
  00047	0b 4d f0	 or	 ecx, DWORD PTR tv132[ebp+4]
  0004a	75 73		 jne	 SHORT $LN1@CheckProce
; Line 209
  0004c	e8 00 00 00 00	 call	 ?GetTimeMs@@YA_JXZ	; GetTimeMs
  00051	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?Start@@3_JA
  00057	1b 15 04 00 00
	00		 sbb	 edx, DWORD PTR ?Start@@3_JA+4
  0005d	89 45 f4	 mov	 DWORD PTR _Delta$2[ebp], eax
  00060	89 55 f8	 mov	 DWORD PTR _Delta$2[ebp+4], edx
; Line 210
  00063	6a 00		 push	 0
  00065	68 e8 03 00 00	 push	 1000			; 000003e8H
  0006a	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?Processed@@3_JA+4
  00070	52		 push	 edx
  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Processed@@3_JA
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 __allmul
  0007c	8b 4d f8	 mov	 ecx, DWORD PTR _Delta$2[ebp+4]
  0007f	51		 push	 ecx
  00080	8b 4d f4	 mov	 ecx, DWORD PTR _Delta$2[ebp]
  00083	51		 push	 ecx
  00084	52		 push	 edx
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 __alldiv
  0008b	89 45 e4	 mov	 DWORD PTR _PerSecond$1[ebp], eax
  0008e	89 55 e8	 mov	 DWORD PTR _PerSecond$1[ebp+4], edx
; Line 212
  00091	8b 55 e4	 mov	 edx, DWORD PTR _PerSecond$1[ebp]
  00094	52		 push	 edx
  00095	8b 45 f4	 mov	 eax, DWORD PTR _Delta$2[ebp]
  00098	50		 push	 eax
  00099	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  0009e	e8 00 00 00 00	 call	 ?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ; std::list<int,std::allocator<int> >::size
  000a3	50		 push	 eax
  000a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?MaxItems@@3IA ; MaxItems
  000aa	51		 push	 ecx
  000ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?Processed@@3_JA
  000b1	52		 push	 edx
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_0DL@HDGCFIPI@Processed?5?$CFd?0?5max?5?$CFd?0?5current?5?$CFd@
  000b7	e8 00 00 00 00	 call	 _printf
  000bc	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@CheckProce:
; Line 215
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
?CheckProcessed@CConsumerThread@@AAEXXZ ENDP		; CConsumerThread::CheckProcessed
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$CLock@VCCriticalSection@@@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$CLock@VCCriticalSection@@@@QAE@XZ PROC		; CLock<CCriticalSection>::~CLock<CCriticalSection>, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 105
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$CLock@VCCriticalSection@@@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 106
  00026	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	e8 00 00 00 00	 call	 ?Leave@CCriticalSection@@QAEXXZ ; CCriticalSection::Leave
; Line 107
  00030	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00033	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003a	59		 pop	 ecx
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$CLock@VCCriticalSection@@@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$CLock@VCCriticalSection@@@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$CLock@VCCriticalSection@@@@QAE@XZ ENDP		; CLock<CCriticalSection>::~CLock<CCriticalSection>
; Function compile flags: /Odtp
;	COMDAT ??0?$CLock@VCCriticalSection@@@@QAE@AAVCCriticalSection@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_ASec$ = 8						; size = 4
??0?$CLock@VCCriticalSection@@@@QAE@AAVCCriticalSection@@@Z PROC ; CLock<CCriticalSection>::CLock<CCriticalSection>, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 100
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 99
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _ASec$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
; Line 101
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00014	e8 00 00 00 00	 call	 ?Enter@CCriticalSection@@QAEXXZ ; CCriticalSection::Enter
; Line 102
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
??0?$CLock@VCCriticalSection@@@@QAE@AAVCCriticalSection@@@Z ENDP ; CLock<CCriticalSection>::CLock<CCriticalSection>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Wait@CProducerThread@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Wait@CProducerThread@@QAEXXZ PROC			; CProducerThread::Wait, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 192
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 193
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	83 38 ff	 cmp	 DWORD PTR [eax], -1
  0000d	74 0e		 je	 SHORT $LN1@Wait
; Line 195
  0000f	6a ff		 push	 -1
  00011	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00014	8b 11		 mov	 edx, DWORD PTR [ecx]
  00016	52		 push	 edx
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitForSingleObject@8
$LN1@Wait:
; Line 197
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?Wait@CProducerThread@@QAEXXZ ENDP			; CProducerThread::Wait
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CProducerThread@@QAE@XZ
_TEXT	SEGMENT
_ThreadId$ = -8						; size = 4
_this$ = -4						; size = 4
??0CProducerThread@@QAE@XZ PROC				; CProducerThread::CProducerThread, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 185
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 188
  00009	8d 45 f8	 lea	 eax, DWORD PTR _ThreadId$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	51		 push	 ecx
  00013	68 00 00 00 00	 push	 OFFSET ?ThreadProc@CProducerThread@@CGKPAX@Z ; CProducerThread::ThreadProc
  00018	6a 00		 push	 0
  0001a	6a 00		 push	 0
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateThread@24
  00022	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00025	89 02		 mov	 DWORD PTR [edx], eax
; Line 189
  00027	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??0CProducerThread@@QAE@XZ ENDP				; CProducerThread::CProducerThread
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?ThreadProc@CProducerThread@@CGKPAX@Z
_TEXT	SEGMENT
_Args$ = -4						; size = 4
_lpParameter$ = 8					; size = 4
?ThreadProc@CProducerThread@@CGKPAX@Z PROC		; CProducerThread::ThreadProc, COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 173
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
; Line 174
  00004	8b 45 08	 mov	 eax, DWORD PTR _lpParameter$[ebp]
  00007	89 45 fc	 mov	 DWORD PTR _Args$[ebp], eax
; Line 176
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _Args$[ebp]
  0000d	e8 00 00 00 00	 call	 ?Execute@CProducerThread@@AAEXXZ ; CProducerThread::Execute
; Line 178
  00012	33 c0		 xor	 eax, eax
; Line 179
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?ThreadProc@CProducerThread@@CGKPAX@Z ENDP		; CProducerThread::ThreadProc
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Execute@CProducerThread@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Execute@CProducerThread@@AAEXXZ PROC			; CProducerThread::Execute, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 163
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
$LN2@Execute:
; Line 164
  00007	b8 01 00 00 00	 mov	 eax, 1
  0000c	85 c0		 test	 eax, eax
  0000e	74 0a		 je	 SHORT $LN1@Execute
; Line 166
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?ExecuteOne@CProducerThread@@AAEXXZ ; CProducerThread::ExecuteOne
; Line 167
  00018	eb ed		 jmp	 SHORT $LN2@Execute
$LN1@Execute:
; Line 168
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?Execute@CProducerThread@@AAEXXZ ENDP			; CProducerThread::Execute
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?ExecuteOne@CProducerThread@@AAEXXZ
_TEXT	SEGMENT
_Lock$ = -28						; size = 4
$T2 = -24						; size = 4
_this$ = -20						; size = 4
tv82 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?ExecuteOne@CProducerThread@@AAEXXZ PROC		; CProducerThread::ExecuteOne, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 143
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?ExecuteOne@CProducerThread@@AAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
; Line 144
  00028	68 00 00 00 00	 push	 OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
  0002d	8d 4d e4	 lea	 ecx, DWORD PTR _Lock$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$CLock@VCCriticalSection@@@@QAE@AAVCCriticalSection@@@Z ; CLock<CCriticalSection>::CLock<CCriticalSection>
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
$LN2@ExecuteOne:
; Line 146
  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  00041	e8 00 00 00 00	 call	 ?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ; std::list<int,std::allocator<int> >::size
  00046	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?N@@3IA	; N
  0004c	72 11		 jb	 SHORT $LN3@ExecuteOne
; Line 148
  0004e	68 00 00 00 00	 push	 OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
  00053	b9 00 00 00 00	 mov	 ecx, OFFSET ?BufferNotFull@@3VCConditionVariable@@A ; BufferNotFull
  00058	e8 00 00 00 00	 call	 ?Sleep@CConditionVariable@@QAEXAAVCCriticalSection@@@Z ; CConditionVariable::Sleep
; Line 149
  0005d	eb dd		 jmp	 SHORT $LN2@ExecuteOne
$LN3@ExecuteOne:
; Line 151
  0005f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?Produce@CProducerThread@@AAEHXZ ; CProducerThread::Produce
  00067	89 45 e8	 mov	 DWORD PTR $T2[ebp], eax
  0006a	8d 45 e8	 lea	 eax, DWORD PTR $T2[ebp]
  0006d	50		 push	 eax
  0006e	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  00073	e8 00 00 00 00	 call	 ?push_back@?$list@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ; std::list<int,std::allocator<int> >::push_back
; Line 156
  00078	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  0007d	e8 00 00 00 00	 call	 ?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ; std::list<int,std::allocator<int> >::size
  00082	39 05 00 00 00
	00		 cmp	 DWORD PTR ?MaxItems@@3IA, eax ; MaxItems
  00088	76 0b		 jbe	 SHORT $LN5@ExecuteOne
  0008a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?MaxItems@@3IA ; MaxItems
  00090	89 4d f0	 mov	 DWORD PTR tv82[ebp], ecx
  00093	eb 0d		 jmp	 SHORT $LN6@ExecuteOne
$LN5@ExecuteOne:
  00095	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  0009a	e8 00 00 00 00	 call	 ?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ; std::list<int,std::allocator<int> >::size
  0009f	89 45 f0	 mov	 DWORD PTR tv82[ebp], eax
$LN6@ExecuteOne:
  000a2	8b 55 f0	 mov	 edx, DWORD PTR tv82[ebp]
  000a5	89 15 00 00 00
	00		 mov	 DWORD PTR ?MaxItems@@3IA, edx ; MaxItems
; Line 159
  000ab	b9 00 00 00 00	 mov	 ecx, OFFSET ?BufferNotEmpty@@3VCConditionVariable@@A ; BufferNotEmpty
  000b0	e8 00 00 00 00	 call	 ?WakeUp@CConditionVariable@@QAEXXZ ; CConditionVariable::WakeUp
; Line 160
  000b5	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000bc	8d 4d e4	 lea	 ecx, DWORD PTR _Lock$[ebp]
  000bf	e8 00 00 00 00	 call	 ??1?$CLock@VCCriticalSection@@@@QAE@XZ ; CLock<CCriticalSection>::~CLock<CCriticalSection>
  000c4	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c7	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000ce	59		 pop	 ecx
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?ExecuteOne@CProducerThread@@AAEXXZ$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR _Lock$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CLock@VCCriticalSection@@@@QAE@XZ ; CLock<CCriticalSection>::~CLock<CCriticalSection>
__ehhandler$?ExecuteOne@CProducerThread@@AAEXXZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?ExecuteOne@CProducerThread@@AAEXXZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?ExecuteOne@CProducerThread@@AAEXXZ ENDP		; CProducerThread::ExecuteOne
; Function compile flags: /Odtp
;	COMDAT ?Produce@CProducerThread@@AAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Produce@CProducerThread@@AAEHXZ PROC			; CProducerThread::Produce, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 138
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 139
  00007	b8 01 00 00 00	 mov	 eax, 1
; Line 140
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?Produce@CProducerThread@@AAEHXZ ENDP			; CProducerThread::Produce
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FQueue@@YAXXZ
text$yd	SEGMENT
??__FQueue@@YAXXZ PROC					; `dynamic atexit destructor for 'Queue'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  00008	e8 00 00 00 00	 call	 ??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ ; std::list<int,std::allocator<int> >::~list<int,std::allocator<int> >
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__FQueue@@YAXXZ ENDP					; `dynamic atexit destructor for 'Queue''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__EQueue@@YAXXZ
text$di	SEGMENT
??__EQueue@@YAXXZ PROC					; `dynamic initializer for 'Queue'', COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 130
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?Queue@@3V?$list@HV?$allocator@H@std@@@std@@A ; Queue
  00008	e8 00 00 00 00	 call	 ??0?$list@HV?$allocator@H@std@@@std@@QAE@XZ ; std::list<int,std::allocator<int> >::list<int,std::allocator<int> >
  0000d	68 00 00 00 00	 push	 OFFSET ??__FQueue@@YAXXZ ; `dynamic atexit destructor for 'Queue''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??__EQueue@@YAXXZ ENDP					; `dynamic initializer for 'Queue''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Incsize@?$list@HV?$allocator@H@std@@@std@@QAEXI@Z
_TEXT	SEGMENT
tv82 = -8						; size = 4
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?_Incsize@?$list@HV?$allocator@H@std@@@std@@QAEXI@Z PROC ; std::list<int,std::allocator<int> >::_Incsize, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1906
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1907
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	e8 00 00 00 00	 call	 ?max_size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ; std::list<int,std::allocator<int> >::max_size
  00012	8b f0		 mov	 esi, eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
  0001c	2b 30		 sub	 esi, DWORD PTR [eax]
  0001e	83 ee 01	 sub	 esi, 1
  00021	3b 75 08	 cmp	 esi, DWORD PTR __Count$[ebp]
  00024	73 0a		 jae	 SHORT $LN2@Incsize
; Line 1908
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long?$AA@
  0002b	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Incsize:
; Line 1909
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00033	e8 00 00 00 00	 call	 ?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
  00038	89 45 f8	 mov	 DWORD PTR tv82[ebp], eax
  0003b	8b 45 f8	 mov	 eax, DWORD PTR tv82[ebp]
  0003e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00040	03 4d 08	 add	 ecx, DWORD PTR __Count$[ebp]
  00043	8b 55 f8	 mov	 edx, DWORD PTR tv82[ebp]
  00046	89 0a		 mov	 DWORD PTR [edx], ecx
$LN3@Incsize:
; Line 1910
  00048	5e		 pop	 esi
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?_Incsize@?$list@HV?$allocator@H@std@@@std@@QAEXI@Z ENDP ; std::list<int,std::allocator<int> >::_Incsize
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Tidy@?$list@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$list@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::list<int,std::allocator<int> >::_Tidy, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1883
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1884
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ; std::list<int,std::allocator<int> >::clear
; Line 1885
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Tidy@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::list<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$2 = -24						; size = 4
__Pnode$ = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::list<int,std::allocator<int> >::clear, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1500
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00014	56		 push	 esi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1505
  00029	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
  00031	8b 00		 mov	 eax, DWORD PTR [eax]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
  00039	83 c4 04	 add	 esp, 4
  0003c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003e	89 4d ec	 mov	 DWORD PTR __Pnode$[ebp], ecx
; Line 1506
  00041	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00044	e8 00 00 00 00	 call	 ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
  00049	8b f0		 mov	 esi, eax
  0004b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0004e	e8 00 00 00 00	 call	 ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
  00053	8b 10		 mov	 edx, DWORD PTR [eax]
  00055	52		 push	 edx
  00056	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
  0005b	83 c4 04	 add	 esp, 4
  0005e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00060	89 08		 mov	 DWORD PTR [eax], ecx
; Line 1507
  00062	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
  0006a	8b f0		 mov	 esi, eax
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	e8 00 00 00 00	 call	 ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	52		 push	 edx
  00077	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
  0007c	83 c4 04	 add	 esp, 4
  0007f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00081	89 08		 mov	 DWORD PTR [eax], ecx
; Line 1508
  00083	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00086	e8 00 00 00 00	 call	 ?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
  0008b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 1510
  00091	eb 06		 jmp	 SHORT $LN4@clear
$LN2@clear:
  00093	8b 55 e8	 mov	 edx, DWORD PTR __Pnext$2[ebp]
  00096	89 55 ec	 mov	 DWORD PTR __Pnode$[ebp], edx
$LN4@clear:
  00099	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0009c	e8 00 00 00 00	 call	 ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
  000a1	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000a4	3b 08		 cmp	 ecx, DWORD PTR [eax]
  000a6	74 1f		 je	 SHORT $LN5@clear
; Line 1512
  000a8	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000ab	52		 push	 edx
  000ac	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
  000b1	83 c4 04	 add	 esp, 4
  000b4	8b 00		 mov	 eax, DWORD PTR [eax]
  000b6	89 45 e8	 mov	 DWORD PTR __Pnext$2[ebp], eax
; Line 1513
  000b9	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  000bc	51		 push	 ecx
  000bd	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000c0	e8 00 00 00 00	 call	 ?_Freenode@?$_List_buy@HV?$allocator@H@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ; std::_List_buy<int,std::allocator<int> >::_Freenode
; Line 1514
  000c5	eb cc		 jmp	 SHORT $LN2@clear
$LN5@clear:
; Line 1515
  000c7	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000ca	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000d1	59		 pop	 ecx
  000d2	5e		 pop	 esi
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?clear@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::list<int,std::allocator<int> >::clear
; Function compile flags: /Odtp
;	COMDAT ?erase@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
__Pnode$ = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z PROC ; std::list<int,std::allocator<int> >::erase, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1466
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1467
  00009	6a 00		 push	 0
  0000b	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  0000e	50		 push	 eax
  0000f	8d 4d 0c	 lea	 ecx, DWORD PTR __Where$[ebp]
  00012	e8 00 00 00 00	 call	 ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE?AV01@H@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<int> > >::operator++
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	51		 push	 ecx
  0001a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001d	e8 00 00 00 00	 call	 ?_Unlinknode@?$list@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ; std::list<int,std::allocator<int> >::_Unlinknode
  00022	89 45 f8	 mov	 DWORD PTR __Pnode$[ebp], eax
; Line 1468
  00025	8b 55 f8	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00028	52		 push	 edx
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?_Freenode@?$_List_buy@HV?$allocator@H@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ; std::_List_buy<int,std::allocator<int> >::_Freenode
; Line 1469
  00031	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00038	51		 push	 ecx
  00039	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003c	e8 00 00 00 00	 call	 ?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ; std::list<int,std::allocator<int> >::_Make_iter
  00041	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1470
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?erase@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ENDP ; std::list<int,std::allocator<int> >::erase
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Unlinknode@?$list@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -12						; size = 4
tv88 = -8						; size = 4
__Pnode$ = -4						; size = 4
__Where$ = 8						; size = 4
?_Unlinknode@?$list@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z PROC ; std::list<int,std::allocator<int> >::_Unlinknode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1444
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi
  00007	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1453
  0000a	8d 4d 08	 lea	 ecx, DWORD PTR __Where$[ebp]
  0000d	e8 00 00 00 00	 call	 ?_Mynode@?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@std@@QBEPAU?$_List_node@HPAX@2@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<int> >,std::_Iterator_base0>::_Mynode
  00012	89 45 fc	 mov	 DWORD PTR __Pnode$[ebp], eax
; Line 1456
  00015	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
  0001e	83 c4 04	 add	 esp, 4
  00021	8b f0		 mov	 esi, eax
  00023	8b 4d fc	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00026	51		 push	 ecx
  00027	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
  0002c	83 c4 04	 add	 esp, 4
  0002f	8b 10		 mov	 edx, DWORD PTR [eax]
  00031	52		 push	 edx
  00032	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
  00037	83 c4 04	 add	 esp, 4
  0003a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003c	89 08		 mov	 DWORD PTR [eax], ecx
; Line 1458
  0003e	8b 55 fc	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00041	52		 push	 edx
  00042	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
  00047	83 c4 04	 add	 esp, 4
  0004a	8b f0		 mov	 esi, eax
  0004c	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
  00055	83 c4 04	 add	 esp, 4
  00058	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
  00060	83 c4 04	 add	 esp, 4
  00063	8b 16		 mov	 edx, DWORD PTR [esi]
  00065	89 10		 mov	 DWORD PTR [eax], edx
; Line 1461
  00067	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
  0006f	89 45 f8	 mov	 DWORD PTR tv88[ebp], eax
  00072	8b 45 f8	 mov	 eax, DWORD PTR tv88[ebp]
  00075	8b 08		 mov	 ecx, DWORD PTR [eax]
  00077	83 e9 01	 sub	 ecx, 1
  0007a	8b 55 f8	 mov	 edx, DWORD PTR tv88[ebp]
  0007d	89 0a		 mov	 DWORD PTR [edx], ecx
; Line 1462
  0007f	8b 45 fc	 mov	 eax, DWORD PTR __Pnode$[ebp]
; Line 1463
  00082	5e		 pop	 esi
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 04 00	 ret	 4
?_Unlinknode@?$list@HV?$allocator@H@std@@@std@@QAEPAU?$_List_node@HPAX@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ENDP ; std::list<int,std::allocator<int> >::_Unlinknode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?pop_back@?$list@HV?$allocator@H@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -8						; size = 4
_this$ = -4						; size = 4
?pop_back@?$list@HV?$allocator@H@std@@@std@@QAEXXZ PROC	; std::list<int,std::allocator<int> >::pop_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1297
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1298
  00009	8d 45 f4	 lea	 eax, DWORD PTR $T2[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ ; std::list<int,std::allocator<int> >::end
  00015	8b c8		 mov	 ecx, eax
  00017	e8 00 00 00 00	 call	 ??F?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::operator--
  0001c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001e	89 4d f8	 mov	 DWORD PTR $T3[ebp], ecx
  00021	8b 55 f8	 mov	 edx, DWORD PTR $T3[ebp]
  00024	52		 push	 edx
  00025	8d 45 f0	 lea	 eax, DWORD PTR $T1[ebp]
  00028	50		 push	 eax
  00029	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	e8 00 00 00 00	 call	 ?erase@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ; std::list<int,std::allocator<int> >::erase
; Line 1299
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?pop_back@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ENDP	; std::list<int,std::allocator<int> >::pop_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
?max_size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::list<int,std::allocator<int> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1246
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1247
  00009	0f b6 45 ff	 movzx	 eax, BYTE PTR $T1[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  00016	8b c8		 mov	 ecx, eax
  00018	e8 00 00 00 00	 call	 ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::max_size
; Line 1248
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?max_size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::list<int,std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ PROC	; std::list<int,std::allocator<int> >::size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1241
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1242
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABIXZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
  0000f	8b 00		 mov	 eax, DWORD PTR [eax]
; Line 1243
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?size@?$list@HV?$allocator@H@std@@@std@@QBEIXZ ENDP	; std::list<int,std::allocator<int> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z PROC ; std::list<int,std::allocator<int> >::_Make_iter, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1163
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1164
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
  0002e	50		 push	 eax
  0002f	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
  00032	50		 push	 eax
  00033	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  00036	e8 00 00 00 00	 call	 ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_iterator<std::_List_val<std::_List_simple_types<int> > >
  0003b	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1165
  0003e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00041	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00048	59		 pop	 ecx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Make_iter@?$list@HV?$allocator@H@std@@@std@@QBE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@@Z ENDP ; std::list<int,std::allocator<int> >::_Make_iter
; Function compile flags: /Odtp
;	COMDAT ?_Unchecked_end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ PROC ; std::list<int,std::allocator<int> >::_Unchecked_end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1152
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1153
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
  00018	8b 00		 mov	 eax, DWORD PTR [eax]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0001e	e8 00 00 00 00	 call	 ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<int> > >
  00023	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1154
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 04 00	 ret	 4
?_Unchecked_end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ ENDP ; std::list<int,std::allocator<int> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ PROC ; std::list<int,std::allocator<int> >::end, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1130
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1131
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
  0002e	50		 push	 eax
  0002f	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
  00037	8b 00		 mov	 eax, DWORD PTR [eax]
  00039	50		 push	 eax
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  0003d	e8 00 00 00 00	 call	 ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@std@@QAE@PAU?$_List_node@HPAX@1@PBV?$_List_val@U?$_List_simple_types@H@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<int> > >::_List_iterator<std::_List_val<std::_List_simple_types<int> > >
  00042	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 1132
  00045	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00048	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004f	59		 pop	 ecx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ ENDP ; std::list<int,std::allocator<int> >::end
; Function compile flags: /Odtp
;	COMDAT ??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::list<int,std::allocator<int> >::~list<int,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1097
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1098
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Tidy@?$list@HV?$allocator@H@std@@@std@@QAEXXZ ; std::list<int,std::allocator<int> >::_Tidy
; Line 1099
  0002e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??1?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ
  00036	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00039	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00040	59		 pop	 ecx
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$list@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::list<int,std::allocator<int> >::~list<int,std::allocator<int> >
; Function compile flags: /Odtp
;	COMDAT ?push_back@?$list@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$list@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z PROC ; std::list<int,std::allocator<int> >::push_back, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 1025
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1026
  00009	8d 45 f4	 lea	 eax, DWORD PTR $T1[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	e8 00 00 00 00	 call	 ?_Unchecked_end@?$list@HV?$allocator@H@std@@@std@@QAE?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@@2@XZ ; std::list<int,std::allocator<int> >::_Unchecked_end
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	89 4d f8	 mov	 DWORD PTR $T2[ebp], ecx
  0001a	8b 55 08	 mov	 edx, DWORD PTR __Val$[ebp]
  0001d	52		 push	 edx
  0001e	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QAHAAH@Z ; std::forward<int>
  00023	83 c4 04	 add	 esp, 4
  00026	50		 push	 eax
  00027	8b 45 f8	 mov	 eax, DWORD PTR $T2[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??$_Insert@H@?$list@HV?$allocator@H@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@H@std@@@std@@U_Iterator_base0@2@@1@$$QAH@Z ; std::list<int,std::allocator<int> >::_Insert<int>
; Line 1027
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
?push_back@?$list@HV?$allocator@H@std@@@std@@QAEX$$QAH@Z ENDP ; std::list<int,std::allocator<int> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$list@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$list@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::list<int,std::allocator<int> >::list<int,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 893
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 892
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ ; std::_List_buy<int,std::allocator<int> >::_List_buy<int,std::allocator<int> >
; Line 894
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0?$list@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::list<int,std::allocator<int> >::list<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_List_buy<int,std::allocator<int> >::~_List_buy<int,std::allocator<int> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::~_List_alloc<std::_List_base_types<int,std::allocator<int> > >
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??1?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_List_buy<int,std::allocator<int> >::~_List_buy<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Freenode@?$_List_buy@HV?$allocator@H@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Freenode@?$_List_buy@HV?$allocator@H@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z PROC ; std::_List_buy<int,std::allocator<int> >::_Freenode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 848
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 849
  00007	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<int,void *> *>
  00019	83 c4 04	 add	 esp, 4
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  00025	8b c8		 mov	 ecx, eax
  00027	e8 00 00 00 00	 call	 ??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
; Line 851
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
  00035	83 c4 04	 add	 esp, 4
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<int,void *> *>
  0003e	83 c4 04	 add	 esp, 4
  00041	50		 push	 eax
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  0004a	8b c8		 mov	 ecx, eax
  0004c	e8 00 00 00 00	 call	 ??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
; Line 853
  00051	8b 55 08	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00054	52		 push	 edx
  00055	e8 00 00 00 00	 call	 ?_Myval@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myval
  0005a	83 c4 04	 add	 esp, 4
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 ??$addressof@H@std@@YAPAHAAH@Z ; std::addressof<int>
  00063	83 c4 04	 add	 esp, 4
  00066	50		 push	 eax
  00067	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006a	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??$destroy@H@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAH@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<int>
; Line 855
  00076	6a 01		 push	 1
  00078	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0007b	50		 push	 eax
  0007c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::deallocate
; Line 856
  0008b	8b e5		 mov	 esp, ebp
  0008d	5d		 pop	 ebp
  0008e	c2 04 00	 ret	 4
?_Freenode@?$_List_buy@HV?$allocator@H@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ENDP ; std::_List_buy<int,std::allocator<int> >::_Freenode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ PROC	; std::_List_buy<int,std::allocator<int> >::_List_buy<int,std::allocator<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 818
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 817
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_List_alloc<std::_List_base_types<int,std::allocator<int> > >
; Line 819
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0?$_List_buy@HV?$allocator@H@std@@@std@@QAE@XZ ENDP	; std::_List_buy<int,std::allocator<int> >::_List_buy<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 319
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 320
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 321
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 314
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 315
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 316
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 299
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 300
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 301
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 294
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 295
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
; Line 296
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myval@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z PROC ; std::_List_val<std::_List_simple_types<int> >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 545
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 546
  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 08	 add	 eax, 8
; Line 547
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Myval@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ENDP ; std::_List_val<std::_List_simple_types<int> >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Prevnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<int> >::_Prevnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 540
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 541
  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	83 c0 04	 add	 eax, 4
; Line 542
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Prevnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<int> >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Nextnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z PROC ; std::_List_val<std::_List_simple_types<int> >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 535
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 536
  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
; Line 537
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
?_Nextnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ENDP ; std::_List_val<std::_List_simple_types<int> >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_val@U?$_List_simple_types@H@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_val@U?$_List_simple_types@H@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<int> >::_List_val<std::_List_simple_types<int> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 531
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 529
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
; Line 530
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
; Line 532
  0001a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
??0?$_List_val@U?$_List_simple_types@H@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<int> >::_List_val<std::_List_simple_types<int> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABIXZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 796
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 797
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
  0000f	83 c0 04	 add	 eax, 4
; Line 798
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABIXZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 791
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 792
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
  0000f	83 c0 04	 add	 eax, 4
; Line 793
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Mysize@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAIXZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Mysize
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 781
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 782
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
; Line 783
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 776
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 777
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second
; Line 778
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 771
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 772
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_second
; Line 773
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Get_data@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAV?$_List_val@U?$_List_simple_types@H@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 766
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 767
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first
; Line 768
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QBEABU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 761
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 762
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Get_first
; Line 763
  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z
_TEXT	SEGMENT
tv132 = -32						; size = 4
tv131 = -28						; size = 4
_this$ = -24						; size = 4
__Pnode$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Next$ = 8						; size = 4
__Prev$ = 12						; size = 4
?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 729
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 10	 sub	 esp, 16			; 00000010H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 730
  0002f	6a 01		 push	 1
  00031	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::allocate
  00040	89 45 ec	 mov	 DWORD PTR __Pnode$[ebp], eax
; Line 732
  00043	83 7d 08 00	 cmp	 DWORD PTR __Next$[ebp], 0
  00047	75 0c		 jne	 SHORT $LN2@Buynode0
; Line 734
  00049	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0004c	89 45 08	 mov	 DWORD PTR __Next$[ebp], eax
; Line 735
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  00052	89 4d 0c	 mov	 DWORD PTR __Prev$[ebp], ecx
$LN2@Buynode0:
; Line 737
  00055	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
; Line 738
  0005c	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0005f	52		 push	 edx
  00060	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
  00065	83 c4 04	 add	 esp, 4
  00068	89 45 e4	 mov	 DWORD PTR tv131[ebp], eax
  0006b	8d 45 08	 lea	 eax, DWORD PTR __Next$[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d e4	 mov	 ecx, DWORD PTR tv131[ebp]
  00072	51		 push	 ecx
  00073	e8 00 00 00 00	 call	 ??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<int,void *> *>
  00078	83 c4 04	 add	 esp, 4
  0007b	50		 push	 eax
  0007c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007f	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
; Line 740
  0008b	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  0008e	52		 push	 edx
  0008f	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
  00094	83 c4 04	 add	 esp, 4
  00097	89 45 e0	 mov	 DWORD PTR tv132[ebp], eax
  0009a	8d 45 0c	 lea	 eax, DWORD PTR __Prev$[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d e0	 mov	 ecx, DWORD PTR tv132[ebp]
  000a1	51		 push	 ecx
  000a2	e8 00 00 00 00	 call	 ??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<int,void *> *>
  000a7	83 c4 04	 add	 esp, 4
  000aa	50		 push	 eax
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  000b3	8b c8		 mov	 ecx, eax
  000b5	e8 00 00 00 00	 call	 ??$construct@PAU?$_List_node@HPAX@std@@AAPAU12@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@AAPAU21@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::construct<std::_List_node<int,void *> *,std::_List_node<int,void *> * &>
  000ba	eb 24		 jmp	 SHORT $LN5@Buynode0
__catch$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z$0:
; Line 743
  000bc	6a 01		 push	 1
  000be	8b 55 ec	 mov	 edx, DWORD PTR __Pnode$[ebp]
  000c1	52		 push	 edx
  000c2	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::deallocate
; Line 744
  000d1	6a 00		 push	 0
  000d3	6a 00		 push	 0
  000d5	e8 00 00 00 00	 call	 __CxxThrowException@8
; Line 745
  000da	b8 00 00 00 00	 mov	 eax, $LN8@Buynode0
  000df	c3		 ret	 0
$LN5@Buynode0:
  000e0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000e7	eb 07		 jmp	 SHORT __tryend$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z$1
$LN8@Buynode0:
  000e9	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z$1:
; Line 747
  000f0	8b 45 ec	 mov	 eax, DWORD PTR __Pnode$[ebp]
$LN4@Buynode0:
; Line 748
  000f3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000fd	59		 pop	 ecx
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5b		 pop	 ebx
  00101	8b e5		 mov	 esp, ebp
  00103	5d		 pop	 ebp
  00104	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a dc	 mov	 ecx, DWORD PTR [edx-36]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
; Function compile flags: /Odtp
;	COMDAT ?_Freeheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Freeheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Freeheadnode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 719
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 720
  00007	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<int,void *> *>
  00019	83 c4 04	 add	 esp, 4
  0001c	50		 push	 eax
  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  00025	8b c8		 mov	 ecx, eax
  00027	e8 00 00 00 00	 call	 ??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
; Line 722
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR __Pnode$[ebp]
  0002f	51		 push	 ecx
  00030	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
  00035	83 c4 04	 add	 esp, 4
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ??$addressof@PAU?$_List_node@HPAX@std@@@std@@YAPAPAU?$_List_node@HPAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<int,void *> *>
  0003e	83 c4 04	 add	 esp, 4
  00041	50		 push	 eax
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  0004a	8b c8		 mov	 ecx, eax
  0004c	e8 00 00 00 00	 call	 ??$destroy@PAU?$_List_node@HPAX@std@@@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAPAU?$_List_node@HPAX@1@@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::destroy<std::_List_node<int,void *> *>
; Line 724
  00051	6a 01		 push	 1
  00053	8b 55 08	 mov	 edx, DWORD PTR __Pnode$[ebp]
  00056	52		 push	 edx
  00057	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?_Getal@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAU?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Getal
  0005f	8b c8		 mov	 ecx, eax
  00061	e8 00 00 00 00	 call	 ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::deallocate
; Line 725
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
?_Freeheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Freeheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Buyheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Buyheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buyheadnode, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 714
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 715
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Buynode0@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@PAU32@0@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buynode0
; Line 716
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?_Buyheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buyheadnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::~_List_alloc<std::_List_base_types<int,std::allocator<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 616
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx
; Line 617
  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
  0002e	8b 00		 mov	 eax, DWORD PTR [eax]
  00030	50		 push	 eax
  00031	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Freeheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@@Z ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Freeheadnode
; Line 618
  00039	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0003c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00043	59		 pop	 ecx
  00044	8b e5		 mov	 esp, ebp
  00046	5d		 pop	 ebp
  00047	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::~_List_alloc<std::_List_base_types<int,std::allocator<int> > >
; Function compile flags: /Odtp
;	COMDAT ??0?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_List_alloc<std::_List_base_types<int,std::allocator<int> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 602
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
; Line 601
  0000a	0f b6 45 ff	 movzx	 eax, BYTE PTR $T1[ebp]
  0000e	50		 push	 eax
  0000f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@U?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@V?$_List_val@U?$_List_simple_types@H@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1>::_Compressed_pair<std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >,std::_List_val<std::_List_simple_types<int> >,1><>
; Line 603
  00017	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	e8 00 00 00 00	 call	 ?_Buyheadnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Buyheadnode
  0001f	8b f0		 mov	 esi, eax
  00021	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	e8 00 00 00 00	 call	 ?_Myhead@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAEAAPAU?$_List_node@HPAX@2@XZ ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myhead
  00029	89 30		 mov	 DWORD PTR [eax], esi
; Line 604
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	5e		 pop	 esi
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
??0?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_List_alloc<std::_List_base_types<int,std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Myval@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myval, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 595
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 596
  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Myval@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ; std::_List_val<std::_List_simple_types<int> >::_Myval
  0000c	83 c4 04	 add	 esp, 4
; Line 597
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?_Myval@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAHPAU?$_List_node@HPAX@2@@Z ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Myval
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 590
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 591
  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Prevnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<int> >::_Prevnode
  0000c	83 c4 04	 add	 esp, 4
; Line 592
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?_Prevnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Prevnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z PROC ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\list
; Line 585
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 586
  00003	8b 45 08	 mov	 eax, DWORD PTR __Pnode$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?_Nextnode@?$_List_val@U?$_List_simple_types@H@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ; std::_List_val<std::_List_simple_types<int> >::_Nextnode
  0000c	83 c4 04	 add	 esp, 4
; Line 587
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?_Nextnode@?$_List_alloc@U?$_List_base_types@HV?$allocator@H@std@@@std@@@std@@SAAAPAU?$_List_node@HPAX@2@PAU32@@Z ENDP ; std::_List_alloc<std::_List_base_types<int,std::allocator<int> > >::_Nextnode
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QBEIU_Nil@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QBEIU_Nil@2@@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 1007
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 1008
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@HPAX@std@@@2@@Z ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::max_size
  00010	83 c4 04	 add	 esp, 4
; Line 1009
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?max_size@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QBEIU_Nil@2@@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 986
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 987
  00007	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0000e	51		 push	 ecx
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ; std::allocator<std::_List_node<int,void *> >::deallocate
; Line 988
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?deallocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 975
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 976
  00007	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ; std::allocator<std::_List_node<int,void *> >::allocate
; Line 977
  00013	8b e5		 mov	 esp, ebp
  00015	5d		 pop	 ebp
  00016	c2 04 00	 ret	 4
?allocate@?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 936
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 935
  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0?$allocator@U?$_List_node@HPAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<int,void *> >::allocator<std::_List_node<int,void *> >
; Line 937
  0000f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
??0?$_Wrap_alloc@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >::_Wrap_alloc<std::allocator<std::_List_node<int,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@HPAX@std@@@2@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@HPAX@std@@@2@@Z PROC ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::max_size, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 868
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 869
  00003	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00006	e8 00 00 00 00	 call	 ?max_size@?$allocator@U?$_List_node@HPAX@std@@@std@@QBEIXZ ; std::allocator<std::_List_node<int,void *> >::max_size
; Line 870
  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?max_size@?$allocator_traits@V?$allocator@U?$_List_node@HPAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@HPAX@std@@@2@@Z ENDP ; std::allocator_traits<std::allocator<std::_List_node<int,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?max_size@?$allocator@U?$_List_node@HPAX@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?max_size@?$allocator@U?$_List_node@HPAX@std@@@std@@QBEIXZ PROC ; std::allocator<std::_List_node<int,void *> >::max_size, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 748
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 749
  00007	b8 55 55 55 15	 mov	 eax, 357913941		; 15555555H
; Line 750
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?max_size@?$allocator@U?$_List_node@HPAX@std@@@std@@QBEIXZ ENDP ; std::allocator<std::_List_node<int,void *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?allocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z PROC ; std::allocator<std::_List_node<int,void *> >::allocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 724
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 725
  00007	6a 01		 push	 1
  00009	6a 0c		 push	 12			; 0000000cH
  0000b	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?_Allocate@std@@YAPAXII_N@Z ; std::_Allocate
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 726
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?allocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEPAU?$_List_node@HPAX@2@I@Z ENDP ; std::allocator<std::_List_node<int,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?deallocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z PROC ; std::allocator<std::_List_node<int,void *> >::deallocate, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 719
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 720
  00007	6a 0c		 push	 12			; 0000000cH
  00009	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?_Deallocate@std@@YAXPAXII@Z ; std::_Deallocate
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH
; Line 721
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 08 00	 ret	 8
?deallocate@?$allocator@U?$_List_node@HPAX@std@@@std@@QAEXPAU?$_List_node@HPAX@2@I@Z ENDP ; std::allocator<std::_List_node<int,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0?$allocator@U?$_List_node@HPAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_List_node@HPAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<int,void *> >::allocator<std::_List_node<int,void *> >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 699
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 701
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0?$allocator@U?$_List_node@HPAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<int,void *> >::allocator<std::_List_node<int,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__EStart@@YAXXZ
text$di	SEGMENT
??__EStart@@YAXXZ PROC					; `dynamic initializer for 'Start'', COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 128
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	e8 00 00 00 00	 call	 ?GetTimeMs@@YA_JXZ	; GetTimeMs
  00008	a3 00 00 00 00	 mov	 DWORD PTR ?Start@@3_JA, eax
  0000d	89 15 04 00 00
	00		 mov	 DWORD PTR ?Start@@3_JA+4, edx
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??__EStart@@YAXXZ ENDP					; `dynamic initializer for 'Start''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FBufferNotEmpty@@YAXXZ
text$yd	SEGMENT
??__FBufferNotEmpty@@YAXXZ PROC				; `dynamic atexit destructor for 'BufferNotEmpty'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?BufferNotEmpty@@3VCConditionVariable@@A ; BufferNotEmpty
  00008	e8 00 00 00 00	 call	 ??1CConditionVariable@@QAE@XZ ; CConditionVariable::~CConditionVariable
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__FBufferNotEmpty@@YAXXZ ENDP				; `dynamic atexit destructor for 'BufferNotEmpty''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__EBufferNotEmpty@@YAXXZ
text$di	SEGMENT
??__EBufferNotEmpty@@YAXXZ PROC				; `dynamic initializer for 'BufferNotEmpty'', COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 126
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?BufferNotEmpty@@3VCConditionVariable@@A ; BufferNotEmpty
  00008	e8 00 00 00 00	 call	 ??0CConditionVariable@@QAE@XZ ; CConditionVariable::CConditionVariable
  0000d	68 00 00 00 00	 push	 OFFSET ??__FBufferNotEmpty@@YAXXZ ; `dynamic atexit destructor for 'BufferNotEmpty''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??__EBufferNotEmpty@@YAXXZ ENDP				; `dynamic initializer for 'BufferNotEmpty''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FBufferNotFull@@YAXXZ
text$yd	SEGMENT
??__FBufferNotFull@@YAXXZ PROC				; `dynamic atexit destructor for 'BufferNotFull'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?BufferNotFull@@3VCConditionVariable@@A ; BufferNotFull
  00008	e8 00 00 00 00	 call	 ??1CConditionVariable@@QAE@XZ ; CConditionVariable::~CConditionVariable
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__FBufferNotFull@@YAXXZ ENDP				; `dynamic atexit destructor for 'BufferNotFull''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__EBufferNotFull@@YAXXZ
text$di	SEGMENT
??__EBufferNotFull@@YAXXZ PROC				; `dynamic initializer for 'BufferNotFull'', COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 125
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?BufferNotFull@@3VCConditionVariable@@A ; BufferNotFull
  00008	e8 00 00 00 00	 call	 ??0CConditionVariable@@QAE@XZ ; CConditionVariable::CConditionVariable
  0000d	68 00 00 00 00	 push	 OFFSET ??__FBufferNotFull@@YAXXZ ; `dynamic atexit destructor for 'BufferNotFull''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??__EBufferNotFull@@YAXXZ ENDP				; `dynamic initializer for 'BufferNotFull''
text$di	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__FCriticalSection@@YAXXZ
text$yd	SEGMENT
??__FCriticalSection@@YAXXZ PROC			; `dynamic atexit destructor for 'CriticalSection'', COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
  00008	e8 00 00 00 00	 call	 ??1CCriticalSection@@QAE@XZ ; CCriticalSection::~CCriticalSection
  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
??__FCriticalSection@@YAXXZ ENDP			; `dynamic atexit destructor for 'CriticalSection''
text$yd	ENDS
; Function compile flags: /Odtp
;	COMDAT ??__ECriticalSection@@YAXXZ
text$di	SEGMENT
??__ECriticalSection@@YAXXZ PROC			; `dynamic initializer for 'CriticalSection'', COMDAT
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 124
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b9 00 00 00 00	 mov	 ecx, OFFSET ?CriticalSection@@3VCCriticalSection@@A ; CriticalSection
  00008	e8 00 00 00 00	 call	 ??0CCriticalSection@@QAE@XZ ; CCriticalSection::CCriticalSection
  0000d	68 00 00 00 00	 push	 OFFSET ??__FCriticalSection@@YAXXZ ; `dynamic atexit destructor for 'CriticalSection''
  00012	e8 00 00 00 00	 call	 _atexit
  00017	83 c4 04	 add	 esp, 4
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
??__ECriticalSection@@YAXXZ ENDP			; `dynamic initializer for 'CriticalSection''
text$di	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_L$ = -36						; size = 8
_F$ = -28						; size = 8
_S$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?GetTimeMs@@YA_JXZ PROC					; GetTimeMs
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 111
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
; Line 112
  00010	33 c0		 xor	 eax, eax
  00012	66 89 45 ec	 mov	 WORD PTR _S$[ebp], ax
  00016	33 c9		 xor	 ecx, ecx
  00018	89 4d ee	 mov	 DWORD PTR _S$[ebp+2], ecx
  0001b	89 4d f2	 mov	 DWORD PTR _S$[ebp+6], ecx
  0001e	89 4d f6	 mov	 DWORD PTR _S$[ebp+10], ecx
  00021	66 89 4d fa	 mov	 WORD PTR _S$[ebp+14], cx
; Line 113
  00025	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _F$[ebp], 0
  0002c	33 d2		 xor	 edx, edx
  0002e	89 55 e8	 mov	 DWORD PTR _F$[ebp+4], edx
; Line 114
  00031	8d 45 ec	 lea	 eax, DWORD PTR _S$[ebp]
  00034	50		 push	 eax
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetSystemTime@4
; Line 115
  0003b	8d 4d e4	 lea	 ecx, DWORD PTR _F$[ebp]
  0003e	51		 push	 ecx
  0003f	8d 55 ec	 lea	 edx, DWORD PTR _S$[ebp]
  00042	52		 push	 edx
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SystemTimeToFileTime@8
; Line 117
  00049	8b 45 e8	 mov	 eax, DWORD PTR _F$[ebp+4]
  0004c	89 45 e0	 mov	 DWORD PTR _L$[ebp+4], eax
; Line 118
  0004f	8b 4d e4	 mov	 ecx, DWORD PTR _F$[ebp]
  00052	89 4d dc	 mov	 DWORD PTR _L$[ebp], ecx
; Line 119
  00055	6a 00		 push	 0
  00057	68 10 27 00 00	 push	 10000			; 00002710H
  0005c	8b 55 e0	 mov	 edx, DWORD PTR _L$[ebp+4]
  0005f	52		 push	 edx
  00060	8b 45 dc	 mov	 eax, DWORD PTR _L$[ebp]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 __alldiv
; Line 120
  00069	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006c	33 cd		 xor	 ecx, ebp
  0006e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c3		 ret	 0
?GetTimeMs@@YA_JXZ ENDP					; GetTimeMs
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1CConditionVariable@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CConditionVariable@@QAE@XZ PROC			; CConditionVariable::~CConditionVariable, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 89
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 90
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
??1CConditionVariable@@QAE@XZ ENDP			; CConditionVariable::~CConditionVariable
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?WakeUp@CConditionVariable@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?WakeUp@CConditionVariable@@QAEXXZ PROC			; CConditionVariable::WakeUp, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 79
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 80
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WakeConditionVariable@4
; Line 81
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?WakeUp@CConditionVariable@@QAEXXZ ENDP			; CConditionVariable::WakeUp
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Sleep@CConditionVariable@@QAEXAAVCCriticalSection@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_CriticalSection$ = 8					; size = 4
?Sleep@CConditionVariable@@QAEXAAVCCriticalSection@@@Z PROC ; CConditionVariable::Sleep, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 74
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 75
  00007	6a ff		 push	 -1
  00009	8b 45 08	 mov	 eax, DWORD PTR _CriticalSection$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00010	51		 push	 ecx
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SleepConditionVariableCS@12
; Line 76
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 04 00	 ret	 4
?Sleep@CConditionVariable@@QAEXAAVCCriticalSection@@@Z ENDP ; CConditionVariable::Sleep
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CConditionVariable@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CConditionVariable@@QAE@XZ PROC			; CConditionVariable::CConditionVariable, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 68
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 70
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeConditionVariable@4
; Line 71
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??0CConditionVariable@@QAE@XZ ENDP			; CConditionVariable::CConditionVariable
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Leave@CCriticalSection@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Leave@CCriticalSection@@QAEXXZ PROC			; CCriticalSection::Leave, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 57
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 58
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LeaveCriticalSection@4
; Line 59
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?Leave@CCriticalSection@@QAEXXZ ENDP			; CCriticalSection::Leave
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?Enter@CCriticalSection@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Enter@CCriticalSection@@QAEXXZ PROC			; CCriticalSection::Enter, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 52
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 53
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__EnterCriticalSection@4
; Line 54
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?Enter@CCriticalSection@@QAEXXZ ENDP			; CCriticalSection::Enter
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??1CCriticalSection@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1CCriticalSection@@QAE@XZ PROC			; CCriticalSection::~CCriticalSection, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 47
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 48
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteCriticalSection@4
; Line 49
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
??1CCriticalSection@@QAE@XZ ENDP			; CCriticalSection::~CCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0CCriticalSection@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0CCriticalSection@@QAE@XZ PROC			; CCriticalSection::CCriticalSection, COMDAT
; _this$ = ecx
; File g:\data\projects\commands\osnew\notestex\examples\synchronization\conditionvariable\test.cpp
; Line 41
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 43
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	50		 push	 eax
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InitializeCriticalSection@4
; Line 44
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
??0CCriticalSection@@QAE@XZ ENDP			; CCriticalSection::CCriticalSection
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Deallocate@std@@YAXPAXII@Z
_TEXT	SEGMENT
__Ptr_ptr$1 = -16					; size = 4
__User_size$ = -12					; size = 4
__Ptr_container$2 = -8					; size = 4
__Ptr_user$3 = -4					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
?_Deallocate@std@@YAXPAXII@Z PROC			; std::_Deallocate, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 92
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
; Line 94
  00006	83 c8 ff	 or	 eax, -1
  00009	33 d2		 xor	 edx, edx
  0000b	f7 75 10	 div	 DWORD PTR __Sz$[ebp]
  0000e	39 45 0c	 cmp	 DWORD PTR __Count$[ebp], eax
  00011	76 05		 jbe	 SHORT $LN2@Deallocate
  00013	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN2@Deallocate:
; Line 95
  00018	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0001b	0f af 45 10	 imul	 eax, DWORD PTR __Sz$[ebp]
  0001f	89 45 f4	 mov	 DWORD PTR __User_size$[ebp], eax
; Line 96
  00022	81 7d f4 00 10
	00 00		 cmp	 DWORD PTR __User_size$[ebp], 4096 ; 00001000H
  00029	72 57		 jb	 SHORT $LN3@Deallocate
; Line 98
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	89 4d fc	 mov	 DWORD PTR __Ptr_user$3[ebp], ecx
; Line 99
  00031	8b 55 fc	 mov	 edx, DWORD PTR __Ptr_user$3[ebp]
  00034	83 e2 1f	 and	 edx, 31			; 0000001fH
  00037	74 05		 je	 SHORT $LN4@Deallocate
  00039	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN4@Deallocate:
; Line 101
  0003e	8b 45 fc	 mov	 eax, DWORD PTR __Ptr_user$3[ebp]
  00041	83 e8 04	 sub	 eax, 4
  00044	89 45 f0	 mov	 DWORD PTR __Ptr_ptr$1[ebp], eax
; Line 103
  00047	8b 4d f0	 mov	 ecx, DWORD PTR __Ptr_ptr$1[ebp]
  0004a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004c	89 55 f8	 mov	 DWORD PTR __Ptr_container$2[ebp], edx
; Line 114
  0004f	8b 45 f8	 mov	 eax, DWORD PTR __Ptr_container$2[ebp]
  00052	3b 45 fc	 cmp	 eax, DWORD PTR __Ptr_user$3[ebp]
  00055	72 05		 jb	 SHORT $LN5@Deallocate
  00057	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN5@Deallocate:
; Line 121
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR __Ptr_user$3[ebp]
  0005f	2b 4d f8	 sub	 ecx, DWORD PTR __Ptr_container$2[ebp]
  00062	83 f9 04	 cmp	 ecx, 4
  00065	73 05		 jae	 SHORT $LN6@Deallocate
  00067	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN6@Deallocate:
; Line 125
  0006c	8b 55 fc	 mov	 edx, DWORD PTR __Ptr_user$3[ebp]
  0006f	2b 55 f8	 sub	 edx, DWORD PTR __Ptr_container$2[ebp]
  00072	83 fa 23	 cmp	 edx, 35			; 00000023H
  00075	76 05		 jbe	 SHORT $LN7@Deallocate
  00077	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN7@Deallocate:
; Line 128
  0007c	8b 45 f8	 mov	 eax, DWORD PTR __Ptr_container$2[ebp]
  0007f	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
$LN3@Deallocate:
; Line 132
  00082	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00085	51		 push	 ecx
  00086	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0008b	83 c4 04	 add	 esp, 4
$LN8@Deallocate:
; Line 133
  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
?_Deallocate@std@@YAXPAXII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Allocate@std@@YAPAXII_N@Z
_TEXT	SEGMENT
__Block_size$1 = -16					; size = 4
__Ptr_container$2 = -12					; size = 4
__User_size$ = -8					; size = 4
__Ptr$ = -4						; size = 4
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Try_aligned_allocation$ = 16				; size = 1
?_Allocate@std@@YAPAXII_N@Z PROC			; std::_Allocate, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xmemory0
; Line 48
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
; Line 49
  00006	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0
; Line 51
  0000d	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00011	75 08		 jne	 SHORT $LN2@Allocate
; Line 52
  00013	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00016	e9 99 00 00 00	 jmp	 $LN9@Allocate
$LN2@Allocate:
; Line 55
  0001b	83 c8 ff	 or	 eax, -1
  0001e	33 d2		 xor	 edx, edx
  00020	f7 75 0c	 div	 DWORD PTR __Sz$[ebp]
  00023	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00026	73 05		 jae	 SHORT $LN3@Allocate
; Line 56
  00028	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN3@Allocate:
; Line 57
  0002d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00030	0f af 45 0c	 imul	 eax, DWORD PTR __Sz$[ebp]
  00034	89 45 f8	 mov	 DWORD PTR __User_size$[ebp], eax
; Line 61
  00037	0f b6 4d 10	 movzx	 ecx, BYTE PTR __Try_aligned_allocation$[ebp]
  0003b	85 c9		 test	 ecx, ecx
  0003d	74 58		 je	 SHORT $LN4@Allocate
  0003f	81 7d f8 00 10
	00 00		 cmp	 DWORD PTR __User_size$[ebp], 4096 ; 00001000H
  00046	72 4f		 jb	 SHORT $LN4@Allocate
; Line 65
  00048	8b 55 f8	 mov	 edx, DWORD PTR __User_size$[ebp]
  0004b	83 c2 23	 add	 edx, 35			; 00000023H
  0004e	89 55 f0	 mov	 DWORD PTR __Block_size$1[ebp], edx
; Line 66
  00051	8b 45 f0	 mov	 eax, DWORD PTR __Block_size$1[ebp]
  00054	3b 45 f8	 cmp	 eax, DWORD PTR __User_size$[ebp]
  00057	77 05		 ja	 SHORT $LN6@Allocate
; Line 67
  00059	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN6@Allocate:
; Line 69
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR __Block_size$1[ebp]
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00067	83 c4 04	 add	 esp, 4
  0006a	89 45 f4	 mov	 DWORD PTR __Ptr_container$2[ebp], eax
; Line 70
  0006d	83 7d f4 00	 cmp	 DWORD PTR __Ptr_container$2[ebp], 0
  00071	75 05		 jne	 SHORT $LN7@Allocate
  00073	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN7@Allocate:
; Line 71
  00078	8b 55 f4	 mov	 edx, DWORD PTR __Ptr_container$2[ebp]
  0007b	83 c2 23	 add	 edx, 35			; 00000023H
  0007e	83 e2 e0	 and	 edx, -32		; ffffffe0H
  00081	89 55 fc	 mov	 DWORD PTR __Ptr$[ebp], edx
; Line 73
  00084	b8 04 00 00 00	 mov	 eax, 4
  00089	6b c8 ff	 imul	 ecx, eax, -1
  0008c	8b 55 fc	 mov	 edx, DWORD PTR __Ptr$[ebp]
  0008f	8b 45 f4	 mov	 eax, DWORD PTR __Ptr_container$2[ebp]
  00092	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax
; Line 79
  00095	eb 1a		 jmp	 SHORT $LN5@Allocate
$LN4@Allocate:
; Line 83
  00097	8b 4d f8	 mov	 ecx, DWORD PTR __User_size$[ebp]
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000a0	83 c4 04	 add	 esp, 4
  000a3	89 45 fc	 mov	 DWORD PTR __Ptr$[ebp], eax
; Line 84
  000a6	83 7d fc 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  000aa	75 05		 jne	 SHORT $LN5@Allocate
  000ac	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
$LN5@Allocate:
; Line 86
  000b1	8b 45 fc	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN9@Allocate:
; Line 87
  000b4	8b e5		 mov	 esp, ebp
  000b6	5d		 pop	 ebp
  000b7	c3		 ret	 0
?_Allocate@std@@YAPAXII_N@Z ENDP			; std::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\xutility
; Line 54
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
; Line 55
  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vcruntime_new.h
; Line 87
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 89
  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]
; Line 90
  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; Line 950
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
; Line 953
  00006	e8 00 00 00 00	 call	 ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
  0000b	8d 45 0c	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000e	89 45 fc	 mov	 DWORD PTR __ArgList$[ebp], eax
; Line 954
  00011	8b 4d fc	 mov	 ecx, DWORD PTR __ArgList$[ebp]
  00014	51		 push	 ecx
  00015	6a 00		 push	 0
  00017	8b 55 08	 mov	 edx, DWORD PTR __Format$[ebp]
  0001a	52		 push	 edx
  0001b	6a 01		 push	 1
  0001d	e8 00 00 00 00	 call	 ___acrt_iob_func
  00022	83 c4 04	 add	 esp, 4
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 __vfprintf_l
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax
; Line 955
  00031	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0
; Line 956
  00038	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]
; Line 957
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<char const * const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
; Line 144
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 146
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<char const * const>
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; Line 638
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 639
  00003	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00006	50		 push	 eax
  00007	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  0000a	51		 push	 ecx
  0000b	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  0000e	52		 push	 edx
  0000f	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00018	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0001b	51		 push	 ecx
  0001c	8b 10		 mov	 edx, DWORD PTR [eax]
  0001e	52		 push	 edx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vfprintf
  00024	83 c4 18	 add	 esp, 24			; 00000018H
; Line 640
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
; Line 73
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; Line 75
  00003	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 76
  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
